{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "ContractUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "chainId_",
          "type": "uint16"
        }
      ],
      "name": "bridgeContracts",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainId",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encodedVm",
          "type": "bytes"
        }
      ],
      "name": "completeTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "tokenAddress",
              "type": "bytes32"
            },
            {
              "internalType": "uint16",
              "name": "tokenChain",
              "type": "uint16"
            },
            {
              "internalType": "bytes32",
              "name": "symbol",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "name",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "tokenID",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "to",
              "type": "bytes32"
            },
            {
              "internalType": "uint16",
              "name": "toChain",
              "type": "uint16"
            }
          ],
          "internalType": "struct NFTBridgeStructs.Transfer",
          "name": "transfer",
          "type": "tuple"
        }
      ],
      "name": "encodeTransfer",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "encoded",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finality",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "governanceActionIsConsumed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governanceChainId",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governanceContract",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "impl",
          "type": "address"
        }
      ],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "isTransferCompleted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "isWrappedAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encoded",
          "type": "bytes"
        }
      ],
      "name": "parseRegisterChain",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "module",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "chainId",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "emitterChainID",
              "type": "uint16"
            },
            {
              "internalType": "bytes32",
              "name": "emitterAddress",
              "type": "bytes32"
            }
          ],
          "internalType": "struct NFTBridgeStructs.RegisterChain",
          "name": "chain",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encoded",
          "type": "bytes"
        }
      ],
      "name": "parseTransfer",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "tokenAddress",
              "type": "bytes32"
            },
            {
              "internalType": "uint16",
              "name": "tokenChain",
              "type": "uint16"
            },
            {
              "internalType": "bytes32",
              "name": "symbol",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "name",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "tokenID",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "to",
              "type": "bytes32"
            },
            {
              "internalType": "uint16",
              "name": "toChain",
              "type": "uint16"
            }
          ],
          "internalType": "struct NFTBridgeStructs.Transfer",
          "name": "transfer",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encoded",
          "type": "bytes"
        }
      ],
      "name": "parseUpgrade",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "module",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "chainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes32",
              "name": "newContract",
              "type": "bytes32"
            }
          ],
          "internalType": "struct NFTBridgeStructs.UpgradeContract",
          "name": "chain",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encodedVM",
          "type": "bytes"
        }
      ],
      "name": "registerChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "splCache",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "name",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "symbol",
              "type": "bytes32"
            }
          ],
          "internalType": "struct NFTBridgeStorage.SPLCache",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "recipientChain",
          "type": "uint16"
        },
        {
          "internalType": "bytes32",
          "name": "recipient",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "nonce",
          "type": "uint32"
        }
      ],
      "name": "transferNFT",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "sequence",
          "type": "uint64"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encodedVM",
          "type": "bytes"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wormhole",
      "outputs": [
        {
          "internalType": "contract IWormhole",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "tokenChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes32",
          "name": "tokenAddress",
          "type": "bytes32"
        }
      ],
      "name": "wrappedAsset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50613d6d806100206000396000f3fe608060405260043610620001675760003560e01c806384acd1bb11620000c5578063c68785191162000078578063c6878519146200053a578063c96616e1146200055f578063d60b347f146200058f578063e6a853e014620005cc578063fbe3c2cd1462000600578063fbeeacd9146200062157600080fd5b806384acd1bb146200043c5780639a8a0592146200045c578063a5799f931462000486578063aa4efa5b14620004ab578063ad66a5f114620004df578063b172b222146200052357600080fd5b80632c3c02a4116200011e5780632c3c02a414620003105780632f3a3d5d14620003445780633ca6482614620003645780635c60da1b14620003dd578063739fc8d114620003f55780638129fc1c146200042457600080fd5b806301f53255146200016c578063150b7a0214620001ea5780631a2be4da14620002295780631ff1e28614620002775780632539464514620002b55780632b51137514620002dc575b600080fd5b3480156200017957600080fd5b50620001916200018b36600462002c2e565b62000681565b604051620001e19190600060a0820190508251825260ff6020840151166020830152604083015161ffff808216604085015280606086015116606085015250506080830151608083015292915050565b60405180910390f35b348015620001f757600080fd5b506200020f6200020936600462002ade565b62000889565b6040516001600160e01b03199091168152602001620001e1565b3480156200023657600080fd5b50620002666200024836600462002ac1565b6001600160a01b031660009081526008602052604090205460ff1690565b6040519015158152602001620001e1565b3480156200028457600080fd5b506200029c6200029636600462002f24565b6200090d565b6040516001600160a01b039091168152602001620001e1565b348015620002c257600080fd5b50620002da620002d436600462002c2e565b62000939565b005b348015620002e957600080fd5b5062000301620002fb36600462002c2e565b62000a1d565b604051620001e1919062003126565b3480156200031d57600080fd5b50620002666200032f36600462002bfc565b60009081526004602052604090205460ff1690565b3480156200035157600080fd5b506001546001600160a01b03166200029c565b3480156200037157600080fd5b50620003c16200038336600462002bfc565b6040805180820190915260008082526020820152506000908152600a6020908152604091829020825180840190935280548352600101549082015290565b60408051825181526020928301519281019290925201620001e1565b348015620003ea57600080fd5b506200029c62000bf3565b3480156200040257600080fd5b50600254640100000000900460ff1660405160ff9091168152602001620001e1565b3480156200043157600080fd5b50620002da62000c0d565b3480156200044957600080fd5b506000546001600160a01b03166200029c565b3480156200046957600080fd5b5060025461ffff165b60405161ffff9091168152602001620001e1565b3480156200049357600080fd5b50620002da620004a536600462002c2e565b62000e7b565b348015620004b857600080fd5b5062000266620004ca36600462002bfc565b60009081526005602052604090205460ff1690565b348015620004ec57600080fd5b5062000514620004fe36600462002ee6565b61ffff1660009081526009602052604090205490565b604051908152602001620001e1565b3480156200053057600080fd5b5060035462000514565b3480156200054757600080fd5b50620002da6200055936600462002c2e565b62000f81565b620005766200057036600462002b7c565b62000f8f565b6040516001600160401b039091168152602001620001e1565b3480156200059c57600080fd5b5062000266620005ae36600462002ac1565b6001600160a01b031660009081526006602052604090205460ff1690565b348015620005d957600080fd5b50620005f1620005eb36600462002cae565b62001653565b604051620001e19190620030bd565b3480156200060d57600080fd5b5060025462010000900461ffff1662000472565b3480156200062e57600080fd5b50620006466200064036600462002c2e565b6200170f565b604051620001e191908151815260208083015160ff169082015260408083015161ffff16908201526060918201519181019190915260800190565b6040805160a081018252600080825260208201819052918101829052606081018290526080810182905290620006b88382620018e8565b8252620006c7602082620032ac565b8251909150684e465442726964676514620007355760405162461bcd60e51b815260206004820152602360248201527f696e76616c6964205265676973746572436861696e3a2077726f6e67206d6f64604482015262756c6560e81b60648201526084015b60405180910390fd5b6200074183826200194a565b60ff16602083015262000756600182620032ac565b9050816020015160ff16600114620007bd5760405162461bcd60e51b815260206004820152602360248201527f696e76616c6964205265676973746572436861696e3a2077726f6e672061637460448201526234b7b760e91b60648201526084016200072c565b620007c98382620019aa565b61ffff166040830152620007df600282620032ac565b9050620007ed8382620019aa565b61ffff16606083015262000803600282620032ac565b9050620008118382620018e8565b608083015262000823602082620032ac565b905080835114620008835760405162461bcd60e51b815260206004820152602360248201527f696e76616c6964205265676973746572436861696e3a2077726f6e67206c656e6044820152620cee8d60eb1b60648201526084016200072c565b50919050565b60006001600160a01b0386163014620008fb5760405162461bcd60e51b815260206004820152602d60248201527f63616e206f6e6c792062726964676520746f6b656e7320766961207472616e7360448201526c19995c939195081b595d1a1bd9609a1b60648201526084016200072c565b50630a85bd0160e11b95945050505050565b61ffff91909116600090815260076020908152604080832093835292905220546001600160a01b031690565b6000806000620009498462001a0b565b925092509250818190620009725760405162461bcd60e51b81526004016200072c9190620030bd565b50620009988361014001516000908152600460205260409020805460ff19166001179055565b6000620009a98460e001516200170f565b9050620009b960025461ffff1690565b61ffff16816040015161ffff161462000a065760405162461bcd60e51b815260206004820152600e60248201526d1ddc9bdb99c818da185a5b881a5960921b60448201526064016200072c565b606081015162000a169062001c3a565b5050505050565b604080516101008101825260008082526020820181905291810182905260608082018390526080820183905260a082015260c0810182905260e08101829052908062000a6a84826200194a565b905062000a79600183620032ac565b91508060ff1660011462000ac35760405162461bcd60e51b815260206004820152601060248201526f34b73b30b634b2102a3930b739b332b960811b60448201526064016200072c565b62000acf8483620018e8565b835262000ade602083620032ac565b915062000aec8483620019aa565b61ffff16602084015262000b02600283620032ac565b915062000b108483620018e8565b604084015262000b22602083620032ac565b915062000b308483620018e8565b606084015262000b42602083620032ac565b915062000b50848362001d71565b608084015262000b62602083620032ac565b915062000b71600183620032ac565b915062000b9e82602284875162000b899190620032c7565b62000b959190620032c7565b86919062001dca565b60a08401528351915062000bb4600283620032c7565b915062000bc28483620019aa565b61ffff1660e084015262000bd8602083620032c7565b915062000be68483620018e8565b60c0840152509092915050565b600062000c086001546001600160a01b031690565b905090565b600062000c417f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905062000c66816001600160a01b031660009081526006602052604090205460ff1690565b1562000cab5760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016200072c565b62000cd4816001600160a01b03166000908152600660205260409020805460ff19166001179055565b60008062000ce560025461ffff1690565b90508061ffff166002141562000cff57600f915062000e5c565b8061ffff166004141562000d1757600f915062000e5c565b8061ffff166005141562000d2f57600f915062000e5c565b8061ffff166006141562000d47576001915062000e5c565b8061ffff166007141562000d5f576001915062000e5c565b8061ffff166009141562000d77576001915062000e5c565b8061ffff16600a141562000d8f576001915062000e5c565b8061ffff16600b141562000da7576001915062000e5c565b8061ffff16600c141562000dbf576001915062000e5c565b8061ffff16600d141562000dd7576001915062000e5c565b8061ffff16600e141562000def576001915062000e5c565b8061ffff166010141562000e07576001915062000e5c565b8061ffff166011141562000e1f576020915062000e5c565b60405162461bcd60e51b81526020600482015260116024820152702ab735b737bbb71031b430b4b71034b21760791b60448201526064016200072c565b6002805464ff00000000191664010000000060ff851602179055505050565b600080600062000e8b8462001a0b565b92509250925081819062000eb45760405162461bcd60e51b81526004016200072c9190620030bd565b5062000eda8361014001516000908152600460205260409020805460ff19166001179055565b600062000eeb8460e0015162000681565b905062000efb60025461ffff1690565b61ffff16816040015161ffff16148062000f1b5750604081015161ffff16155b62000f5c5760405162461bcd60e51b815260206004820152601060248201526f1a5b9d985b1a590818da185a5b881a5960821b60448201526064016200072c565b62000a168160600151826080015161ffff909116600090815260096020526040902055565b62000f8c8162001ee3565b50565b600080600062000fb7886001600160a01b031660009081526008602052604090205460ff1690565b15620010b157876001600160a01b0316639a8a05926040518163ffffffff1660e01b815260040160206040518083038186803b15801562000ff757600080fd5b505afa1580156200100c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001032919062002f05565b9150876001600160a01b0316633d6c043b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200106e57600080fd5b505afa15801562001083573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010a9919062002c15565b90506200127b565b60025461ffff166040516301ffc9a760e01b81526380ac58cd60e01b60048201529092506001600160a01b038916915081906301ffc9a79060240160206040518083038186803b1580156200110557600080fd5b505afa1580156200111a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001140919062002bdf565b620011985760405162461bcd60e51b815260206004820152602160248201527f6d75737420737570706f7274207468652045524337323120696e7465726661636044820152606560f81b60648201526084016200072c565b6040516301ffc9a760e01b8152635b5e139f60e01b60048201526001600160a01b038916906301ffc9a79060240160206040518083038186803b158015620011df57600080fd5b505afa158015620011f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200121a919062002bdf565b6200127b5760405162461bcd60e51b815260206004820152602a60248201527f6d75737420737570706f727420746865204552433732312d4d657461646174616044820152691032bc3a32b739b4b7b760b11b60648201526084016200072c565b60608060608461ffff16600114620013d55760408051600481526024810182526020810180516001600160e01b03166395d89b4160e01b17905290516000916001600160a01b038e1691620012d1919062002f9d565b600060405180830381855afa9150503d80600081146200130e576040519150601f19603f3d011682016040523d82523d6000602084013e62001313565b606091505b5060408051600481526024810182526020810180516001600160e01b03166306fdde0360e01b1790529051919350600092506001600160a01b038f16916200135c919062002f9d565b600060405180830381855afa9150503d806000811462001399576040519150601f19603f3d011682016040523d82523d6000602084013e6200139e565b606091505b5091505081806020019051810190620013b8919062002c78565b945080806020019051810190620013d0919062002c78565b935050505b60008b6001600160a01b03168b604051602401620013f591815260200190565b60408051601f198184030181529181526020820180516001600160e01b031663c87b56dd60e01b179052516200142c919062002f9d565b600060405180830381855afa9150503d806000811462001469576040519150601f19603f3d011682016040523d82523d6000602084013e6200146e565b606091505b509150508080602001905181019062001488919062002c78565b9150506000808661ffff16600114156200150557604080518082018252600080825260209182018190528e8152600a82528281208351808501909452805484526001015491830191909152906020810151815190945092509050620014fe8d6000908152600a6020526040812081815560010155565b5062001512565b5050602083810151908301515b604051632142170760e11b8152336004820152306024820152604481018d90526001600160a01b038e16906342842e0e90606401600060405180830381600087803b1580156200156157600080fd5b505af115801562001576573d6000803e3d6000fd5b505050506200158860025461ffff1690565b61ffff168761ffff1614620015f457604051630852cd8d60e31b8152600481018d90526001600160a01b038e16906342966c6890602401600060405180830381600087803b158015620015da57600080fd5b505af1158015620015ef573d6000803e3d6000fd5b505050505b620016426040518061010001604052808881526020018961ffff1681526020018481526020018381526020018e81526020018581526020018c81526020018d61ffff16815250348b620022c7565b9d9c50505050505050505050505050565b606060c88260a00151511115620016b85760405162461bcd60e51b815260206004820152602260248201527f746f6b656e555249206d757374206e6f74206578636565642032303020627974604482015261657360f01b60648201526084016200072c565b81516020808401516040808601516060870151608088015160a0890151805160c08b015160e08c01519651620016f99a60019a909998939493910162002fee565b6040516020818303038152906040529050919050565b6040805160808101825260008082526020820181905291810182905260608101829052906200173f8382620018e8565b82526200174e602082620032ac565b8251909150684e465442726964676514620017ba5760405162461bcd60e51b815260206004820152602560248201527f696e76616c69642055706772616465436f6e74726163743a2077726f6e67206d6044820152646f64756c6560d81b60648201526084016200072c565b620017c683826200194a565b60ff166020830152620017db600182620032ac565b9050816020015160ff16600214620018445760405162461bcd60e51b815260206004820152602560248201527f696e76616c69642055706772616465436f6e74726163743a2077726f6e67206160448201526431ba34b7b760d91b60648201526084016200072c565b620018508382620019aa565b61ffff16604083015262001866600282620032ac565b9050620018748382620018e8565b606083015262001886602082620032ac565b905080835114620008835760405162461bcd60e51b815260206004820152602560248201527f696e76616c69642055706772616465436f6e74726163743a2077726f6e67206c6044820152640cadccee8d60db1b60648201526084016200072c565b6000620018f7826020620032ac565b83511015620019415760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b60448201526064016200072c565b50016020015190565b600062001959826001620032ac565b83511015620019a15760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b60448201526064016200072c565b50016001015190565b6000620019b9826002620032ac565b8351101562001a025760405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b60448201526064016200072c565b50016002015190565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201819052610100820183905261012082015261014081019190915260006060600080600062001a7f6000546001600160a01b031690565b6001600160a01b031663c0fd8bde886040518263ffffffff1660e01b815260040162001aac9190620030bd565b60006040518083038186803b15801562001ac557600080fd5b505afa15801562001ada573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001b04919081019062002d77565b9250925092508162001b1d579194509250905062001c33565b60025462010000900461ffff1661ffff16836060015161ffff161462001b7b5750506040805180820190915260168152753bb937b7339033b7bb32b93730b731b29031b430b4b760511b602082015290935060009250905062001c33565b60035483608001511462001bce57505060408051808201909152601981527f77726f6e6720676f7665726e616e636520636f6e747261637400000000000000602082015290935060009250905062001c33565b61014083015160009081526004602052604090205460ff161562001c185782600060405180606001604052806022815260200162003d166022913995509550955050505062001c33565b50506040805160208101909152600081529093506001925090505b9193909250565b600062001c6e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905062001c7b8262002390565b60408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905160009182916001600160a01b0386169162001cc09162002f9d565b600060405180830381855af49150503d806000811462001cfd576040519150601f19603f3d011682016040523d82523d6000602084013e62001d02565b606091505b509150915081819062001d2a5760405162461bcd60e51b81526004016200072c9190620030bd565b50836001600160a01b0316836001600160a01b03167f2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a4960405160405180910390a350505050565b600062001d80826020620032ac565b83511015620019415760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b60448201526064016200072c565b60608162001dda81601f620032ac565b101562001e1b5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016200072c565b62001e278284620032ac565b8451101562001e6d5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016200072c565b60608215801562001e8e576040519150600082526020820160405262001eda565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101562001ec957805183526020928301920162001eaf565b5050858452601f01601f1916604052505b50949350505050565b600080600062001efb6000546001600160a01b031690565b6001600160a01b031663c0fd8bde856040518263ffffffff1660e01b815260040162001f289190620030bd565b60006040518083038186803b15801562001f4157600080fd5b505afa15801562001f56573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001f80919081019062002d77565b92509250925081819062001fa95760405162461bcd60e51b81526004016200072c9190620030bd565b5062001fb583620023d2565b62001ff55760405162461bcd60e51b815260206004820152600f60248201526e34b73b30b634b21032b6b4ba3a32b960891b60448201526064016200072c565b6000620020068460e0015162000a1d565b90506200202784610140015160009081526005602052604090205460ff1690565b15620020765760405162461bcd60e51b815260206004820152601a60248201527f7472616e7366657220616c726561647920636f6d706c6574656400000000000060448201526064016200072c565b6200209b8461014001516000908152600560205260409020805460ff19166001179055565b60025461ffff1661ffff168160e0015161ffff1614620020f55760405162461bcd60e51b815260206004820152601460248201527334b73b30b634b2103a30b933b2ba1031b430b4b760611b60448201526064016200072c565b60006200210560025461ffff1690565b61ffff16826020015161ffff16141562002122575080516200216d565b600062002138836020015184600001516200090d565b90506001600160a01b0381166200216a576200216783602001518460000151856060015186604001516200240f565b90505b90505b60c082015160025461ffff1661ffff16836020015161ffff16146200224c57826020015161ffff1660011415620021d8576080830151604080518082018252606086015181528186015160208083019182526000948552600a90529190922091518255516001909101555b608083015160a08401516040516334ff261960e21b81526001600160a01b0385169263d3fc98649262002212928692919060040162003094565b600060405180830381600087803b1580156200222d57600080fd5b505af115801562002242573d6000803e3d6000fd5b50505050620022be565b6080830151604051632142170760e11b81523060048201526001600160a01b0383811660248301526044820192909252908316906342842e0e90606401600060405180830381600087803b158015620022a457600080fd5b505af1158015620022b9573d6000803e3d6000fd5b505050505b50505050505050565b600080620022d58562001653565b9050620022ea6000546001600160a01b031690565b6001600160a01b031663b19a437e8585846200231160025460ff6401000000009091041690565b6040518563ffffffff1660e01b81526004016200233193929190620031a4565b6020604051808303818588803b1580156200234b57600080fd5b505af115801562002360573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062002387919062002f52565b95945050505050565b6200239b81620026bc565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60008160800151620023f8836060015161ffff1660009081526009602052604090205490565b14156200240757506001919050565b506000919050565b60006200241f60025461ffff1690565b61ffff168561ffff161415620024895760405162461bcd60e51b815260206004820152602860248201527f63616e206f6e6c79207772617020746f6b656e732066726f6d20666f726569676044820152676e20636861696e7360c01b60648201526084016200072c565b60006200249786866200090d565b6001600160a01b031614620024ef5760405162461bcd60e51b815260206004820152601c60248201527f7772617070656420617373657420616c7265616479206578697374730000000060448201526064016200072c565b8461ffff166001141562002531577f576f726d686f6c65204272696467656420536f6c616e612d4e4654000000000092506915d3d49354d41313919560b21b91505b6000627ce50b60e31b620025458562002763565b620025508562002763565b30898960405160240162002569959493929190620030d2565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b03199095169490941790935251909250600091620025b39130918591016200306e565b6040516020818303038152906040529050600060405180602001620025d8906200289e565b601f1982820381018352601f909101166040819052620025fe9190849060200162002fbb565b60408051601f19818403018152908290526001600160f01b031960f08b901b166020830152602282018990529150600090604201604051602081830303815290604052805190602001209050808251602084016000f59450843b6200266257600080fd5b61ffff891660009081526007602090815260408083208b8452825280832080546001600160a01b0319166001600160a01b038a16908117909155835260089091529020805460ff1916600117905550505050949350505050565b803b620027225760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016200072c565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b606060005b602081108015620027a657508281602081106200279557634e487b7160e01b600052603260045260246000fd5b1a60f81b6001600160f81b03191615155b15620027c15780620027b88162003314565b91505062002768565b6000816001600160401b03811115620027ea57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801562002815576020820181803683370190505b50905060005b8281101562002896578481602081106200284557634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106200286a57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350806200288d8162003314565b9150506200281b565b509392505050565b610993806200338383390190565b6000620028c3620028bd8462003282565b6200324f565b9050828152838383011115620028d857600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b03811681146200290757600080fd5b919050565b600082601f8301126200291d578081fd5b815160206001600160401b038211156200293b576200293b62003348565b6200294b818360051b016200324f565b80838252828201915082860187848660071b89010111156200296b578586fd5b855b85811015620029d757608080838b03121562002987578788fd5b62002991620031d8565b8351815286840151878201526040620029ac81860162002aaf565b908201526060620029bf85820162002aaf565b9082015285529385019391909101906001016200296d565b5090979650505050505050565b805180151581146200290757600080fd5b600082601f83011262002a06578081fd5b815162002a17620028bd8262003282565b81815284602083860101111562002a2c578283fd5b62002a3f826020830160208701620032e1565b949350505050565b600082601f83011262002a58578081fd5b62002a6983833560208501620028ac565b9392505050565b803562002907816200335e565b805162002907816200335e565b805162002907816200336f565b80516001600160401b03811681146200290757600080fd5b805160ff811681146200290757600080fd5b60006020828403121562002ad3578081fd5b62002a6982620028ef565b60008060008060006080868803121562002af6578081fd5b62002b0186620028ef565b945062002b1160208701620028ef565b93506040860135925060608601356001600160401b038082111562002b34578283fd5b818801915088601f83011262002b48578283fd5b81358181111562002b57578384fd5b89602082850101111562002b69578384fd5b9699959850939650602001949392505050565b600080600080600060a0868803121562002b94578283fd5b62002b9f86620028ef565b945060208601359350604086013562002bb8816200335e565b925060608601359150608086013562002bd1816200336f565b809150509295509295909350565b60006020828403121562002bf1578081fd5b62002a6982620029e4565b60006020828403121562002c0e578081fd5b5035919050565b60006020828403121562002c27578081fd5b5051919050565b60006020828403121562002c40578081fd5b81356001600160401b0381111562002c56578182fd5b8201601f8101841362002c67578182fd5b62002a3f84823560208401620028ac565b60006020828403121562002c8a578081fd5b81516001600160401b0381111562002ca0578182fd5b62002a3f84828501620029f5565b60006020828403121562002cc0578081fd5b81356001600160401b038082111562002cd7578283fd5b90830190610100828603121562002cec578283fd5b62002cf662003203565b8235815262002d086020840162002a70565b602082015260408301356040820152606083013560608201526080830135608082015260a08301358281111562002d3d578485fd5b62002d4b8782860162002a47565b60a08301525060c083013560c082015262002d6960e0840162002a70565b60e082015295945050505050565b60008060006060848603121562002d8c578081fd5b83516001600160401b038082111562002da3578283fd5b90850190610160828803121562002db8578283fd5b62002dc262003229565b62002dcd8362002aaf565b815262002ddd6020840162002a8a565b602082015262002df06040840162002a8a565b604082015262002e036060840162002a7d565b60608201526080830151608082015262002e2060a0840162002a97565b60a082015262002e3360c0840162002aaf565b60c082015260e08301518281111562002e4a578485fd5b62002e5889828601620029f5565b60e08301525061010062002e6e81850162002a8a565b90820152610120838101518381111562002e86578586fd5b62002e948a8287016200290c565b91830191909152506101408381015190820152945062002eb760208701620029e4565b9350604086015191508082111562002ecd578283fd5b5062002edc86828701620029f5565b9150509250925092565b60006020828403121562002ef8578081fd5b813562002a69816200335e565b60006020828403121562002f17578081fd5b815162002a69816200335e565b6000806040838503121562002f37578182fd5b823562002f44816200335e565b946020939093013593505050565b60006020828403121562002f64578081fd5b62002a698262002a97565b6000815180845262002f89816020860160208601620032e1565b601f01601f19169290920160200192915050565b6000825162002fb1818460208701620032e1565b9190910192915050565b6000835162002fcf818460208801620032e1565b83519083019062002fe5818360208801620032e1565b01949350505050565b600060ff60f81b808d60f81b1683528b600184015261ffff60f01b808c60f01b1660218501528a6023850152896043850152886063850152818860f81b1660838501528651915062003048826084860160208a01620032e1565b920160848101949094525060f09190911b1660a482015260a60198975050505050505050565b6001600160a01b038316815260406020820181905260009062002a3f9083018462002f6f565b60018060a01b038416815282602082015260606040820152600062002387606083018462002f6f565b60208152600062002a69602083018462002f6f565b60a081526000620030e760a083018862002f6f565b8281036020840152620030fb818862002f6f565b6001600160a01b03969096166040840152505061ffff92909216606083015260809091015292915050565b60208152815160208201526000602083015161ffff80821660408501526040850151606085015260608501516080850152608085015160a085015260a085015191506101008060c08601526200318161012086018462002f6f565b925060c086015160e08601528160e0870151168186015250508091505092915050565b63ffffffff84168152606060208201526000620031c5606083018562002f6f565b905060ff83166040830152949350505050565b604051608081016001600160401b0381118282101715620031fd57620031fd62003348565b60405290565b60405161010081016001600160401b0381118282101715620031fd57620031fd62003348565b60405161016081016001600160401b0381118282101715620031fd57620031fd62003348565b604051601f8201601f191681016001600160401b03811182821017156200327a576200327a62003348565b604052919050565b60006001600160401b038211156200329e576200329e62003348565b50601f01601f191660200190565b60008219821115620032c257620032c262003332565b500190565b600082821015620032dc57620032dc62003332565b500390565b60005b83811015620032fe578181015183820152602001620032e4565b838111156200330e576000848401525b50505050565b60006000198214156200332b576200332b62003332565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b61ffff8116811462000f8c57600080fd5b63ffffffff8116811462000f8c57600080fdfe608060405234801561001057600080fd5b5060405161099338038061099383398101604081905261002f9161048e565b818161005c60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51610599565b60008051602061094c8339815191521461008657634e487b7160e01b600052600160045260246000fd5b6100928282600061009b565b505050506105fe565b6100a483610175565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100e55750805b156101705761016e836001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561012657600080fd5b505afa15801561013a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015e9190610474565b8361031560201b6100291760201c565b505b505050565b6101888161034160201b6100551760201c565b6101e75760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61026a816001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561022357600080fd5b505afa158015610237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025b9190610474565b61034160201b6100551760201c565b6102cf5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101de565b806102f460008051602061094c83398151915260001b61034760201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b606061033a838360405180606001604052806027815260200161096c6027913961034a565b9392505050565b3b151590565b90565b6060833b6103a95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101de565b600080856001600160a01b0316856040516103c4919061054a565b600060405180830381855af49150503d80600081146103ff576040519150601f19603f3d011682016040523d82523d6000602084013e610404565b606091505b50909250905061041582828661041f565b9695505050505050565b6060831561042e57508161033a565b82511561043e5782518084602001fd5b8160405162461bcd60e51b81526004016101de9190610566565b80516001600160a01b038116811461046f57600080fd5b919050565b600060208284031215610485578081fd5b61033a82610458565b600080604083850312156104a0578081fd5b6104a983610458565b60208401519092506001600160401b03808211156104c5578283fd5b818501915085601f8301126104d8578283fd5b8151818111156104ea576104ea6105e8565b604051601f8201601f19908116603f01168101908382118183101715610512576105126105e8565b8160405282815288602084870101111561052a578586fd5b61053b8360208301602088016105bc565b80955050505050509250929050565b6000825161055c8184602087016105bc565b9190910192915050565b60208152600082518060208401526105858160408501602087016105bc565b601f01601f19169190910160400192915050565b6000828210156105b757634e487b7160e01b81526011600452602481fd5b500390565b60005b838110156105d75781810151838201526020016105bf565b8381111561016e5750506000910152565b634e487b7160e01b600052604160045260246000fd5b61033f8061060d6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b610106565b565b606061004e83836040518060600160405280602781526020016102e36027913961012a565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100c957600080fd5b505afa1580156100dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610101919061023c565b905090565b3660008037600080366000845af43d6000803e808015610125573d6000f35b3d6000fd5b6060833b61018e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b0316856040516101a99190610263565b600060405180830381855af49150503d80600081146101e4576040519150601f19603f3d011682016040523d82523d6000602084013e6101e9565b606091505b50915091506101f9828286610203565b9695505050505050565b6060831561021257508161004e565b8251156102225782518084602001fd5b8160405162461bcd60e51b8152600401610185919061027f565b60006020828403121561024d578081fd5b81516001600160a01b038116811461004e578182fd5b600082516102758184602087016102b2565b9190910192915050565b602081526000825180602084015261029e8160408501602087016102b2565b601f01601f19169190910160400192915050565b60005b838110156102cd5781810151838201526020016102b5565b838111156102dc576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220160d85a29a84cf838180163b1113ca1cb351c7530a3b24652adb9dd2f2505a0764736f6c63430008040033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564676f7665726e616e636520616374696f6e20616c726561647920636f6e73756d6564a2646970667358221220a39edb0d7da1961fa04ba2c4c77e1cc264a960743a00f3e8c0cc76c84a5d6f0b64736f6c63430008040033",
    "sourceMap": "225:1543:29:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610620001675760003560e01c806384acd1bb11620000c5578063c68785191162000078578063c6878519146200053a578063c96616e1146200055f578063d60b347f146200058f578063e6a853e014620005cc578063fbe3c2cd1462000600578063fbeeacd9146200062157600080fd5b806384acd1bb146200043c5780639a8a0592146200045c578063a5799f931462000486578063aa4efa5b14620004ab578063ad66a5f114620004df578063b172b222146200052357600080fd5b80632c3c02a4116200011e5780632c3c02a414620003105780632f3a3d5d14620003445780633ca6482614620003645780635c60da1b14620003dd578063739fc8d114620003f55780638129fc1c146200042457600080fd5b806301f53255146200016c578063150b7a0214620001ea5780631a2be4da14620002295780631ff1e28614620002775780632539464514620002b55780632b51137514620002dc575b600080fd5b3480156200017957600080fd5b50620001916200018b36600462002c2e565b62000681565b604051620001e19190600060a0820190508251825260ff6020840151166020830152604083015161ffff808216604085015280606086015116606085015250506080830151608083015292915050565b60405180910390f35b348015620001f757600080fd5b506200020f6200020936600462002ade565b62000889565b6040516001600160e01b03199091168152602001620001e1565b3480156200023657600080fd5b50620002666200024836600462002ac1565b6001600160a01b031660009081526008602052604090205460ff1690565b6040519015158152602001620001e1565b3480156200028457600080fd5b506200029c6200029636600462002f24565b6200090d565b6040516001600160a01b039091168152602001620001e1565b348015620002c257600080fd5b50620002da620002d436600462002c2e565b62000939565b005b348015620002e957600080fd5b5062000301620002fb36600462002c2e565b62000a1d565b604051620001e1919062003126565b3480156200031d57600080fd5b50620002666200032f36600462002bfc565b60009081526004602052604090205460ff1690565b3480156200035157600080fd5b506001546001600160a01b03166200029c565b3480156200037157600080fd5b50620003c16200038336600462002bfc565b6040805180820190915260008082526020820152506000908152600a6020908152604091829020825180840190935280548352600101549082015290565b60408051825181526020928301519281019290925201620001e1565b348015620003ea57600080fd5b506200029c62000bf3565b3480156200040257600080fd5b50600254640100000000900460ff1660405160ff9091168152602001620001e1565b3480156200043157600080fd5b50620002da62000c0d565b3480156200044957600080fd5b506000546001600160a01b03166200029c565b3480156200046957600080fd5b5060025461ffff165b60405161ffff9091168152602001620001e1565b3480156200049357600080fd5b50620002da620004a536600462002c2e565b62000e7b565b348015620004b857600080fd5b5062000266620004ca36600462002bfc565b60009081526005602052604090205460ff1690565b348015620004ec57600080fd5b5062000514620004fe36600462002ee6565b61ffff1660009081526009602052604090205490565b604051908152602001620001e1565b3480156200053057600080fd5b5060035462000514565b3480156200054757600080fd5b50620002da6200055936600462002c2e565b62000f81565b620005766200057036600462002b7c565b62000f8f565b6040516001600160401b039091168152602001620001e1565b3480156200059c57600080fd5b5062000266620005ae36600462002ac1565b6001600160a01b031660009081526006602052604090205460ff1690565b348015620005d957600080fd5b50620005f1620005eb36600462002cae565b62001653565b604051620001e19190620030bd565b3480156200060d57600080fd5b5060025462010000900461ffff1662000472565b3480156200062e57600080fd5b50620006466200064036600462002c2e565b6200170f565b604051620001e191908151815260208083015160ff169082015260408083015161ffff16908201526060918201519181019190915260800190565b6040805160a081018252600080825260208201819052918101829052606081018290526080810182905290620006b88382620018e8565b8252620006c7602082620032ac565b8251909150684e465442726964676514620007355760405162461bcd60e51b815260206004820152602360248201527f696e76616c6964205265676973746572436861696e3a2077726f6e67206d6f64604482015262756c6560e81b60648201526084015b60405180910390fd5b6200074183826200194a565b60ff16602083015262000756600182620032ac565b9050816020015160ff16600114620007bd5760405162461bcd60e51b815260206004820152602360248201527f696e76616c6964205265676973746572436861696e3a2077726f6e672061637460448201526234b7b760e91b60648201526084016200072c565b620007c98382620019aa565b61ffff166040830152620007df600282620032ac565b9050620007ed8382620019aa565b61ffff16606083015262000803600282620032ac565b9050620008118382620018e8565b608083015262000823602082620032ac565b905080835114620008835760405162461bcd60e51b815260206004820152602360248201527f696e76616c6964205265676973746572436861696e3a2077726f6e67206c656e6044820152620cee8d60eb1b60648201526084016200072c565b50919050565b60006001600160a01b0386163014620008fb5760405162461bcd60e51b815260206004820152602d60248201527f63616e206f6e6c792062726964676520746f6b656e7320766961207472616e7360448201526c19995c939195081b595d1a1bd9609a1b60648201526084016200072c565b50630a85bd0160e11b95945050505050565b61ffff91909116600090815260076020908152604080832093835292905220546001600160a01b031690565b6000806000620009498462001a0b565b925092509250818190620009725760405162461bcd60e51b81526004016200072c9190620030bd565b50620009988361014001516000908152600460205260409020805460ff19166001179055565b6000620009a98460e001516200170f565b9050620009b960025461ffff1690565b61ffff16816040015161ffff161462000a065760405162461bcd60e51b815260206004820152600e60248201526d1ddc9bdb99c818da185a5b881a5960921b60448201526064016200072c565b606081015162000a169062001c3a565b5050505050565b604080516101008101825260008082526020820181905291810182905260608082018390526080820183905260a082015260c0810182905260e08101829052908062000a6a84826200194a565b905062000a79600183620032ac565b91508060ff1660011462000ac35760405162461bcd60e51b815260206004820152601060248201526f34b73b30b634b2102a3930b739b332b960811b60448201526064016200072c565b62000acf8483620018e8565b835262000ade602083620032ac565b915062000aec8483620019aa565b61ffff16602084015262000b02600283620032ac565b915062000b108483620018e8565b604084015262000b22602083620032ac565b915062000b308483620018e8565b606084015262000b42602083620032ac565b915062000b50848362001d71565b608084015262000b62602083620032ac565b915062000b71600183620032ac565b915062000b9e82602284875162000b899190620032c7565b62000b959190620032c7565b86919062001dca565b60a08401528351915062000bb4600283620032c7565b915062000bc28483620019aa565b61ffff1660e084015262000bd8602083620032c7565b915062000be68483620018e8565b60c0840152509092915050565b600062000c086001546001600160a01b031690565b905090565b600062000c417f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905062000c66816001600160a01b031660009081526006602052604090205460ff1690565b1562000cab5760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016200072c565b62000cd4816001600160a01b03166000908152600660205260409020805460ff19166001179055565b60008062000ce560025461ffff1690565b90508061ffff166002141562000cff57600f915062000e5c565b8061ffff166004141562000d1757600f915062000e5c565b8061ffff166005141562000d2f57600f915062000e5c565b8061ffff166006141562000d47576001915062000e5c565b8061ffff166007141562000d5f576001915062000e5c565b8061ffff166009141562000d77576001915062000e5c565b8061ffff16600a141562000d8f576001915062000e5c565b8061ffff16600b141562000da7576001915062000e5c565b8061ffff16600c141562000dbf576001915062000e5c565b8061ffff16600d141562000dd7576001915062000e5c565b8061ffff16600e141562000def576001915062000e5c565b8061ffff166010141562000e07576001915062000e5c565b8061ffff166011141562000e1f576020915062000e5c565b60405162461bcd60e51b81526020600482015260116024820152702ab735b737bbb71031b430b4b71034b21760791b60448201526064016200072c565b6002805464ff00000000191664010000000060ff851602179055505050565b600080600062000e8b8462001a0b565b92509250925081819062000eb45760405162461bcd60e51b81526004016200072c9190620030bd565b5062000eda8361014001516000908152600460205260409020805460ff19166001179055565b600062000eeb8460e0015162000681565b905062000efb60025461ffff1690565b61ffff16816040015161ffff16148062000f1b5750604081015161ffff16155b62000f5c5760405162461bcd60e51b815260206004820152601060248201526f1a5b9d985b1a590818da185a5b881a5960821b60448201526064016200072c565b62000a168160600151826080015161ffff909116600090815260096020526040902055565b62000f8c8162001ee3565b50565b600080600062000fb7886001600160a01b031660009081526008602052604090205460ff1690565b15620010b157876001600160a01b0316639a8a05926040518163ffffffff1660e01b815260040160206040518083038186803b15801562000ff757600080fd5b505afa1580156200100c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001032919062002f05565b9150876001600160a01b0316633d6c043b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200106e57600080fd5b505afa15801562001083573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010a9919062002c15565b90506200127b565b60025461ffff166040516301ffc9a760e01b81526380ac58cd60e01b60048201529092506001600160a01b038916915081906301ffc9a79060240160206040518083038186803b1580156200110557600080fd5b505afa1580156200111a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001140919062002bdf565b620011985760405162461bcd60e51b815260206004820152602160248201527f6d75737420737570706f7274207468652045524337323120696e7465726661636044820152606560f81b60648201526084016200072c565b6040516301ffc9a760e01b8152635b5e139f60e01b60048201526001600160a01b038916906301ffc9a79060240160206040518083038186803b158015620011df57600080fd5b505afa158015620011f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200121a919062002bdf565b6200127b5760405162461bcd60e51b815260206004820152602a60248201527f6d75737420737570706f727420746865204552433732312d4d657461646174616044820152691032bc3a32b739b4b7b760b11b60648201526084016200072c565b60608060608461ffff16600114620013d55760408051600481526024810182526020810180516001600160e01b03166395d89b4160e01b17905290516000916001600160a01b038e1691620012d1919062002f9d565b600060405180830381855afa9150503d80600081146200130e576040519150601f19603f3d011682016040523d82523d6000602084013e62001313565b606091505b5060408051600481526024810182526020810180516001600160e01b03166306fdde0360e01b1790529051919350600092506001600160a01b038f16916200135c919062002f9d565b600060405180830381855afa9150503d806000811462001399576040519150601f19603f3d011682016040523d82523d6000602084013e6200139e565b606091505b5091505081806020019051810190620013b8919062002c78565b945080806020019051810190620013d0919062002c78565b935050505b60008b6001600160a01b03168b604051602401620013f591815260200190565b60408051601f198184030181529181526020820180516001600160e01b031663c87b56dd60e01b179052516200142c919062002f9d565b600060405180830381855afa9150503d806000811462001469576040519150601f19603f3d011682016040523d82523d6000602084013e6200146e565b606091505b509150508080602001905181019062001488919062002c78565b9150506000808661ffff16600114156200150557604080518082018252600080825260209182018190528e8152600a82528281208351808501909452805484526001015491830191909152906020810151815190945092509050620014fe8d6000908152600a6020526040812081815560010155565b5062001512565b5050602083810151908301515b604051632142170760e11b8152336004820152306024820152604481018d90526001600160a01b038e16906342842e0e90606401600060405180830381600087803b1580156200156157600080fd5b505af115801562001576573d6000803e3d6000fd5b505050506200158860025461ffff1690565b61ffff168761ffff1614620015f457604051630852cd8d60e31b8152600481018d90526001600160a01b038e16906342966c6890602401600060405180830381600087803b158015620015da57600080fd5b505af1158015620015ef573d6000803e3d6000fd5b505050505b620016426040518061010001604052808881526020018961ffff1681526020018481526020018381526020018e81526020018581526020018c81526020018d61ffff16815250348b620022c7565b9d9c50505050505050505050505050565b606060c88260a00151511115620016b85760405162461bcd60e51b815260206004820152602260248201527f746f6b656e555249206d757374206e6f74206578636565642032303020627974604482015261657360f01b60648201526084016200072c565b81516020808401516040808601516060870151608088015160a0890151805160c08b015160e08c01519651620016f99a60019a909998939493910162002fee565b6040516020818303038152906040529050919050565b6040805160808101825260008082526020820181905291810182905260608101829052906200173f8382620018e8565b82526200174e602082620032ac565b8251909150684e465442726964676514620017ba5760405162461bcd60e51b815260206004820152602560248201527f696e76616c69642055706772616465436f6e74726163743a2077726f6e67206d6044820152646f64756c6560d81b60648201526084016200072c565b620017c683826200194a565b60ff166020830152620017db600182620032ac565b9050816020015160ff16600214620018445760405162461bcd60e51b815260206004820152602560248201527f696e76616c69642055706772616465436f6e74726163743a2077726f6e67206160448201526431ba34b7b760d91b60648201526084016200072c565b620018508382620019aa565b61ffff16604083015262001866600282620032ac565b9050620018748382620018e8565b606083015262001886602082620032ac565b905080835114620008835760405162461bcd60e51b815260206004820152602560248201527f696e76616c69642055706772616465436f6e74726163743a2077726f6e67206c6044820152640cadccee8d60db1b60648201526084016200072c565b6000620018f7826020620032ac565b83511015620019415760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b60448201526064016200072c565b50016020015190565b600062001959826001620032ac565b83511015620019a15760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b60448201526064016200072c565b50016001015190565b6000620019b9826002620032ac565b8351101562001a025760405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b60448201526064016200072c565b50016002015190565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201819052610100820183905261012082015261014081019190915260006060600080600062001a7f6000546001600160a01b031690565b6001600160a01b031663c0fd8bde886040518263ffffffff1660e01b815260040162001aac9190620030bd565b60006040518083038186803b15801562001ac557600080fd5b505afa15801562001ada573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001b04919081019062002d77565b9250925092508162001b1d579194509250905062001c33565b60025462010000900461ffff1661ffff16836060015161ffff161462001b7b5750506040805180820190915260168152753bb937b7339033b7bb32b93730b731b29031b430b4b760511b602082015290935060009250905062001c33565b60035483608001511462001bce57505060408051808201909152601981527f77726f6e6720676f7665726e616e636520636f6e747261637400000000000000602082015290935060009250905062001c33565b61014083015160009081526004602052604090205460ff161562001c185782600060405180606001604052806022815260200162003d166022913995509550955050505062001c33565b50506040805160208101909152600081529093506001925090505b9193909250565b600062001c6e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905062001c7b8262002390565b60408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905160009182916001600160a01b0386169162001cc09162002f9d565b600060405180830381855af49150503d806000811462001cfd576040519150601f19603f3d011682016040523d82523d6000602084013e62001d02565b606091505b509150915081819062001d2a5760405162461bcd60e51b81526004016200072c9190620030bd565b50836001600160a01b0316836001600160a01b03167f2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a4960405160405180910390a350505050565b600062001d80826020620032ac565b83511015620019415760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b60448201526064016200072c565b60608162001dda81601f620032ac565b101562001e1b5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016200072c565b62001e278284620032ac565b8451101562001e6d5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016200072c565b60608215801562001e8e576040519150600082526020820160405262001eda565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101562001ec957805183526020928301920162001eaf565b5050858452601f01601f1916604052505b50949350505050565b600080600062001efb6000546001600160a01b031690565b6001600160a01b031663c0fd8bde856040518263ffffffff1660e01b815260040162001f289190620030bd565b60006040518083038186803b15801562001f4157600080fd5b505afa15801562001f56573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001f80919081019062002d77565b92509250925081819062001fa95760405162461bcd60e51b81526004016200072c9190620030bd565b5062001fb583620023d2565b62001ff55760405162461bcd60e51b815260206004820152600f60248201526e34b73b30b634b21032b6b4ba3a32b960891b60448201526064016200072c565b6000620020068460e0015162000a1d565b90506200202784610140015160009081526005602052604090205460ff1690565b15620020765760405162461bcd60e51b815260206004820152601a60248201527f7472616e7366657220616c726561647920636f6d706c6574656400000000000060448201526064016200072c565b6200209b8461014001516000908152600560205260409020805460ff19166001179055565b60025461ffff1661ffff168160e0015161ffff1614620020f55760405162461bcd60e51b815260206004820152601460248201527334b73b30b634b2103a30b933b2ba1031b430b4b760611b60448201526064016200072c565b60006200210560025461ffff1690565b61ffff16826020015161ffff16141562002122575080516200216d565b600062002138836020015184600001516200090d565b90506001600160a01b0381166200216a576200216783602001518460000151856060015186604001516200240f565b90505b90505b60c082015160025461ffff1661ffff16836020015161ffff16146200224c57826020015161ffff1660011415620021d8576080830151604080518082018252606086015181528186015160208083019182526000948552600a90529190922091518255516001909101555b608083015160a08401516040516334ff261960e21b81526001600160a01b0385169263d3fc98649262002212928692919060040162003094565b600060405180830381600087803b1580156200222d57600080fd5b505af115801562002242573d6000803e3d6000fd5b50505050620022be565b6080830151604051632142170760e11b81523060048201526001600160a01b0383811660248301526044820192909252908316906342842e0e90606401600060405180830381600087803b158015620022a457600080fd5b505af1158015620022b9573d6000803e3d6000fd5b505050505b50505050505050565b600080620022d58562001653565b9050620022ea6000546001600160a01b031690565b6001600160a01b031663b19a437e8585846200231160025460ff6401000000009091041690565b6040518563ffffffff1660e01b81526004016200233193929190620031a4565b6020604051808303818588803b1580156200234b57600080fd5b505af115801562002360573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062002387919062002f52565b95945050505050565b6200239b81620026bc565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60008160800151620023f8836060015161ffff1660009081526009602052604090205490565b14156200240757506001919050565b506000919050565b60006200241f60025461ffff1690565b61ffff168561ffff161415620024895760405162461bcd60e51b815260206004820152602860248201527f63616e206f6e6c79207772617020746f6b656e732066726f6d20666f726569676044820152676e20636861696e7360c01b60648201526084016200072c565b60006200249786866200090d565b6001600160a01b031614620024ef5760405162461bcd60e51b815260206004820152601c60248201527f7772617070656420617373657420616c7265616479206578697374730000000060448201526064016200072c565b8461ffff166001141562002531577f576f726d686f6c65204272696467656420536f6c616e612d4e4654000000000092506915d3d49354d41313919560b21b91505b6000627ce50b60e31b620025458562002763565b620025508562002763565b30898960405160240162002569959493929190620030d2565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b03199095169490941790935251909250600091620025b39130918591016200306e565b6040516020818303038152906040529050600060405180602001620025d8906200289e565b601f1982820381018352601f909101166040819052620025fe9190849060200162002fbb565b60408051601f19818403018152908290526001600160f01b031960f08b901b166020830152602282018990529150600090604201604051602081830303815290604052805190602001209050808251602084016000f59450843b6200266257600080fd5b61ffff891660009081526007602090815260408083208b8452825280832080546001600160a01b0319166001600160a01b038a16908117909155835260089091529020805460ff1916600117905550505050949350505050565b803b620027225760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016200072c565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b606060005b602081108015620027a657508281602081106200279557634e487b7160e01b600052603260045260246000fd5b1a60f81b6001600160f81b03191615155b15620027c15780620027b88162003314565b91505062002768565b6000816001600160401b03811115620027ea57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801562002815576020820181803683370190505b50905060005b8281101562002896578481602081106200284557634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106200286a57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350806200288d8162003314565b9150506200281b565b509392505050565b610993806200338383390190565b6000620028c3620028bd8462003282565b6200324f565b9050828152838383011115620028d857600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b03811681146200290757600080fd5b919050565b600082601f8301126200291d578081fd5b815160206001600160401b038211156200293b576200293b62003348565b6200294b818360051b016200324f565b80838252828201915082860187848660071b89010111156200296b578586fd5b855b85811015620029d757608080838b03121562002987578788fd5b62002991620031d8565b8351815286840151878201526040620029ac81860162002aaf565b908201526060620029bf85820162002aaf565b9082015285529385019391909101906001016200296d565b5090979650505050505050565b805180151581146200290757600080fd5b600082601f83011262002a06578081fd5b815162002a17620028bd8262003282565b81815284602083860101111562002a2c578283fd5b62002a3f826020830160208701620032e1565b949350505050565b600082601f83011262002a58578081fd5b62002a6983833560208501620028ac565b9392505050565b803562002907816200335e565b805162002907816200335e565b805162002907816200336f565b80516001600160401b03811681146200290757600080fd5b805160ff811681146200290757600080fd5b60006020828403121562002ad3578081fd5b62002a6982620028ef565b60008060008060006080868803121562002af6578081fd5b62002b0186620028ef565b945062002b1160208701620028ef565b93506040860135925060608601356001600160401b038082111562002b34578283fd5b818801915088601f83011262002b48578283fd5b81358181111562002b57578384fd5b89602082850101111562002b69578384fd5b9699959850939650602001949392505050565b600080600080600060a0868803121562002b94578283fd5b62002b9f86620028ef565b945060208601359350604086013562002bb8816200335e565b925060608601359150608086013562002bd1816200336f565b809150509295509295909350565b60006020828403121562002bf1578081fd5b62002a6982620029e4565b60006020828403121562002c0e578081fd5b5035919050565b60006020828403121562002c27578081fd5b5051919050565b60006020828403121562002c40578081fd5b81356001600160401b0381111562002c56578182fd5b8201601f8101841362002c67578182fd5b62002a3f84823560208401620028ac565b60006020828403121562002c8a578081fd5b81516001600160401b0381111562002ca0578182fd5b62002a3f84828501620029f5565b60006020828403121562002cc0578081fd5b81356001600160401b038082111562002cd7578283fd5b90830190610100828603121562002cec578283fd5b62002cf662003203565b8235815262002d086020840162002a70565b602082015260408301356040820152606083013560608201526080830135608082015260a08301358281111562002d3d578485fd5b62002d4b8782860162002a47565b60a08301525060c083013560c082015262002d6960e0840162002a70565b60e082015295945050505050565b60008060006060848603121562002d8c578081fd5b83516001600160401b038082111562002da3578283fd5b90850190610160828803121562002db8578283fd5b62002dc262003229565b62002dcd8362002aaf565b815262002ddd6020840162002a8a565b602082015262002df06040840162002a8a565b604082015262002e036060840162002a7d565b60608201526080830151608082015262002e2060a0840162002a97565b60a082015262002e3360c0840162002aaf565b60c082015260e08301518281111562002e4a578485fd5b62002e5889828601620029f5565b60e08301525061010062002e6e81850162002a8a565b90820152610120838101518381111562002e86578586fd5b62002e948a8287016200290c565b91830191909152506101408381015190820152945062002eb760208701620029e4565b9350604086015191508082111562002ecd578283fd5b5062002edc86828701620029f5565b9150509250925092565b60006020828403121562002ef8578081fd5b813562002a69816200335e565b60006020828403121562002f17578081fd5b815162002a69816200335e565b6000806040838503121562002f37578182fd5b823562002f44816200335e565b946020939093013593505050565b60006020828403121562002f64578081fd5b62002a698262002a97565b6000815180845262002f89816020860160208601620032e1565b601f01601f19169290920160200192915050565b6000825162002fb1818460208701620032e1565b9190910192915050565b6000835162002fcf818460208801620032e1565b83519083019062002fe5818360208801620032e1565b01949350505050565b600060ff60f81b808d60f81b1683528b600184015261ffff60f01b808c60f01b1660218501528a6023850152896043850152886063850152818860f81b1660838501528651915062003048826084860160208a01620032e1565b920160848101949094525060f09190911b1660a482015260a60198975050505050505050565b6001600160a01b038316815260406020820181905260009062002a3f9083018462002f6f565b60018060a01b038416815282602082015260606040820152600062002387606083018462002f6f565b60208152600062002a69602083018462002f6f565b60a081526000620030e760a083018862002f6f565b8281036020840152620030fb818862002f6f565b6001600160a01b03969096166040840152505061ffff92909216606083015260809091015292915050565b60208152815160208201526000602083015161ffff80821660408501526040850151606085015260608501516080850152608085015160a085015260a085015191506101008060c08601526200318161012086018462002f6f565b925060c086015160e08601528160e0870151168186015250508091505092915050565b63ffffffff84168152606060208201526000620031c5606083018562002f6f565b905060ff83166040830152949350505050565b604051608081016001600160401b0381118282101715620031fd57620031fd62003348565b60405290565b60405161010081016001600160401b0381118282101715620031fd57620031fd62003348565b60405161016081016001600160401b0381118282101715620031fd57620031fd62003348565b604051601f8201601f191681016001600160401b03811182821017156200327a576200327a62003348565b604052919050565b60006001600160401b038211156200329e576200329e62003348565b50601f01601f191660200190565b60008219821115620032c257620032c262003332565b500190565b600082821015620032dc57620032dc62003332565b500390565b60005b83811015620032fe578181015183820152602001620032e4565b838111156200330e576000848401525b50505050565b60006000198214156200332b576200332b62003332565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b61ffff8116811462000f8c57600080fd5b63ffffffff8116811462000f8c57600080fdfe608060405234801561001057600080fd5b5060405161099338038061099383398101604081905261002f9161048e565b818161005c60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51610599565b60008051602061094c8339815191521461008657634e487b7160e01b600052600160045260246000fd5b6100928282600061009b565b505050506105fe565b6100a483610175565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100e55750805b156101705761016e836001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561012657600080fd5b505afa15801561013a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015e9190610474565b8361031560201b6100291760201c565b505b505050565b6101888161034160201b6100551760201c565b6101e75760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61026a816001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561022357600080fd5b505afa158015610237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025b9190610474565b61034160201b6100551760201c565b6102cf5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101de565b806102f460008051602061094c83398151915260001b61034760201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b606061033a838360405180606001604052806027815260200161096c6027913961034a565b9392505050565b3b151590565b90565b6060833b6103a95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101de565b600080856001600160a01b0316856040516103c4919061054a565b600060405180830381855af49150503d80600081146103ff576040519150601f19603f3d011682016040523d82523d6000602084013e610404565b606091505b50909250905061041582828661041f565b9695505050505050565b6060831561042e57508161033a565b82511561043e5782518084602001fd5b8160405162461bcd60e51b81526004016101de9190610566565b80516001600160a01b038116811461046f57600080fd5b919050565b600060208284031215610485578081fd5b61033a82610458565b600080604083850312156104a0578081fd5b6104a983610458565b60208401519092506001600160401b03808211156104c5578283fd5b818501915085601f8301126104d8578283fd5b8151818111156104ea576104ea6105e8565b604051601f8201601f19908116603f01168101908382118183101715610512576105126105e8565b8160405282815288602084870101111561052a578586fd5b61053b8360208301602088016105bc565b80955050505050509250929050565b6000825161055c8184602087016105bc565b9190910192915050565b60208152600082518060208401526105858160408501602087016105bc565b601f01601f19169190910160400192915050565b6000828210156105b757634e487b7160e01b81526011600452602481fd5b500390565b60005b838110156105d75781810151838201526020016105bf565b8381111561016e5750506000910152565b634e487b7160e01b600052604160045260246000fd5b61033f8061060d6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b610106565b565b606061004e83836040518060600160405280602781526020016102e36027913961012a565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100c957600080fd5b505afa1580156100dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610101919061023c565b905090565b3660008037600080366000845af43d6000803e808015610125573d6000f35b3d6000fd5b6060833b61018e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b0316856040516101a99190610263565b600060405180830381855af49150503d80600081146101e4576040519150601f19603f3d011682016040523d82523d6000602084013e6101e9565b606091505b50915091506101f9828286610203565b9695505050505050565b6060831561021257508161004e565b8251156102225782518084602001fd5b8160405162461bcd60e51b8152600401610185919061027f565b60006020828403121561024d578081fd5b81516001600160a01b038116811461004e578182fd5b600082516102758184602087016102b2565b9190910192915050565b602081526000825180602084015261029e8160408501602087016102b2565b601f01601f19169190910160400192915050565b60005b838110156102cd5781810151838201526020016102b5565b838111156102dc576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220160d85a29a84cf838180163b1113ca1cb351c7530a3b24652adb9dd2f2505a0764736f6c63430008040033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564676f7665726e616e636520616374696f6e20616c726561647920636f6e73756d6564a2646970667358221220a39edb0d7da1961fa04ba2c4c77e1cc264a960743a00f3e8c0cc76c84a5d6f0b64736f6c63430008040033",
    "sourceMap": "225:1543:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3196:798:28;;;;;;;;;;-1:-1:-1;3196:798:28;;;;;:::i;:::-;;:::i;:::-;;;;;;26422:4:63;26464:3;26453:9;26449:19;26441:27;;26501:6;26495:13;26484:9;26477:32;26577:4;26569;26561:6;26557:17;26551:24;26547:35;26540:4;26529:9;26525:20;26518:65;26630:4;26622:6;26618:17;26612:24;26655:6;26717:2;26703:12;26699:21;26692:4;26681:9;26677:20;26670:51;26789:2;26781:4;26773:6;26769:17;26763:24;26759:33;26752:4;26741:9;26737:20;26730:63;;;26849:4;26841:6;26837:17;26831:24;26824:4;26813:9;26809:20;26802:54;26431:431;;;;;3196:798:28;;;;;;;;9665:296:26;;;;;;;;;;-1:-1:-1;9665:296:26;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;14809:33:63;;;14791:52;;14779:2;14764:18;9665:296:26;14746:103:63;1554:117:27;;;;;;;;;;-1:-1:-1;1554:117:27;;;;;:::i;:::-;-1:-1:-1;;;;;1636:28:27;1614:4;1636:28;;;:21;:28;;;;;;;;;1554:117;;;;14438:14:63;;14431:22;14413:41;;14401:2;14386:18;1554:117:27;14368:92:63;1127:166:27;;;;;;;;;;-1:-1:-1;1127:166:27;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;13138:32:63;;;13120:51;;13108:2;13093:18;1127:166:27;13075:102:63;1382:486:28;;;;;;;;;;-1:-1:-1;1382:486:28;;;;;:::i;:::-;;:::i;:::-;;8548:1111:26;;;;;;;;;;-1:-1:-1;8548:1111:26;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;267:139:27:-;;;;;;;;;;-1:-1:-1;267:139:27;;;;;:::i;:::-;338:4;361:38;;;:32;:38;;;;;;;;;267:139;1438:110;;;;;;;;;;-1:-1:-1;1515:26:27;;-1:-1:-1;;;;;1515:26:27;1438:110;;1677:138;;;;;;;;;;-1:-1:-1;1677:138:27;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;1784:6:27;:24;;;:15;:24;;;;;;;;;1777:31;;;;;;;;;;;;;;;;;;;;1677:138;;;;;27085:13:63;;27067:32;;27155:4;27143:17;;;27137:24;27115:20;;;27108:54;;;;27040:18;1677:138:27;27022:146:63;322:101:29;;;;;;;;;;;;;:::i;1821:96:27:-;;;;;;;;;;-1:-1:-1;1886:15:27;:24;;;;;;1821:96;;29691:4:63;29679:17;;;29661:36;;29649:2;29634:18;1821:96:27;29616:87:63;429:1101:29;;;;;;;;;;;;;:::i;676:102:27:-;;;;;;;;;;-1:-1:-1;717:9:27;755:15;-1:-1:-1;;;;;755:15:27;676:102;;784:94;;;;;;;;;;-1:-1:-1;848:15:27;:23;;;784:94;;;28727:6:63;28715:19;;;28697:38;;28685:2;28670:18;784:94:27;28652:89:63;831:493:28;;;;;;;;;;-1:-1:-1;831:493:28;;;;;:::i;:::-;;:::i;545:125:27:-;;;;;;;;;;-1:-1:-1;545:125:27;;;;;:::i;:::-;609:4;632:31;;;:25;:31;;;;;;;;;545:125;1299:133;;;;;;;;;;-1:-1:-1;1299:133:27;;;;;:::i;:::-;1387:38;;1362:7;1387:38;;;:28;:38;;;;;;;1299:133;;;;14611:25:63;;;14599:2;14584:18;1299:133:27;14566:76:63;1004:117:27;;;;;;;;;;-1:-1:-1;1080:34:27;;1004:117;;4002:102:26;;;;;;;;;;-1:-1:-1;4002:102:26;;;;;:::i;:::-;;:::i;569:3109::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;29476:31:63;;;29458:50;;29446:2;29431:18;569:3109:26;29413:101:63;412:127:27;;;;;;;;;;-1:-1:-1;412:127:27;;;;;:::i;:::-;-1:-1:-1;;;;;493:39:27;470:4;493:39;;;:33;:39;;;;;;;;;412:127;7898:644:26;;;;;;;;;;-1:-1:-1;7898:644:26;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;884:114:27:-;;;;;;;;;;-1:-1:-1;958:15:27;:33;;;;;;884:114;;4000:720:28;;;;;;;;;;-1:-1:-1;4000:720:28;;;;;:::i;:::-;;:::i;:::-;;;;;;28315:13:63;;28297:32;;28389:4;28377:17;;;28371:24;28397:4;28367:35;28345:20;;;28338:65;28463:4;28451:17;;;28445:24;28471:6;28441:37;28419:20;;;28412:67;28535:4;28523:17;;;28517:24;28495:20;;;28488:54;;;;28284:3;28269:19;;28251:297;3196:798:28;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3391:24:28;:7;-1:-1:-1;3391:17:28;:24::i;:::-;3376:39;;3425:11;3434:2;3425:11;;:::i;:::-;3454:12;;3425:11;;-1:-1:-1;708:66:28;3454:22;3446:70;;;;-1:-1:-1;;;3446:70:28;;18908:2:63;3446:70:28;;;18890:21:63;18947:2;18927:18;;;18920:30;18986:34;18966:18;;;18959:62;-1:-1:-1;;;19037:18:63;;;19030:33;19080:19;;3446:70:28;;;;;;;;;3542:22;:7;3558:5;3542:15;:22::i;:::-;3527:37;;:12;;;:37;3574:10;3583:1;3574:10;;:::i;:::-;;;3602:5;:12;;;:17;;3618:1;3602:17;3594:65;;;;-1:-1:-1;;;3594:65:28;;16710:2:63;3594:65:28;;;16692:21:63;16749:2;16729:18;;;16722:30;16788:34;16768:18;;;16761:62;-1:-1:-1;;;16839:18:63;;;16832:33;16882:19;;3594:65:28;16682:225:63;3594:65:28;3686:23;:7;3703:5;3686:16;:23::i;:::-;3670:39;;:13;;;:39;3719:10;3728:1;3719:10;;:::i;:::-;;-1:-1:-1;3783:23:28;:7;3719:10;3783:16;:23::i;:::-;3760:46;;:20;;;:46;3816:10;3825:1;3816:10;;:::i;:::-;;-1:-1:-1;3860:24:28;:7;3816:10;3860:17;:24::i;:::-;3837:20;;;:47;3894:11;3903:2;3894:11;;:::i;:::-;;;3942:5;3924:7;:14;:23;3916:71;;;;-1:-1:-1;;;3916:71:28;;23748:2:63;3916:71:28;;;23730:21:63;23787:2;23767:18;;;23760:30;23826:34;23806:18;;;23799:62;-1:-1:-1;;;23877:18:63;;;23870:33;23920:19;;3916:71:28;23720:225:63;3916:71:28;3196:798;;;;:::o;9665:296:26:-;9804:6;-1:-1:-1;;;;;9829:25:26;;9849:4;9829:25;9821:83;;;;-1:-1:-1;;;9821:83:26;;21043:2:63;9821:83:26;;;21025:21:63;21082:2;21062:18;;;21055:30;21121:34;21101:18;;;21094:62;-1:-1:-1;;;21172:18:63;;;21165:43;21225:19;;9821:83:26;21015:235:63;9821:83:26;-1:-1:-1;;;;9665:296:26;;;;;;;:::o;1127:166:27:-;1238:34;;;;;1213:7;1238:34;;;:20;:34;;;;;;;;:48;;;;;;;;-1:-1:-1;;;;;1238:48:27;;1127:166::o;1382:486:28:-;1441:22;1465:10;1477:20;1501:29;1520:9;1501:18;:29::i;:::-;1440:90;;;;;;1548:5;1555:6;1540:22;;;;;-1:-1:-1;;;1540:22:28;;;;;;;;:::i;:::-;;1573:36;1601:2;:7;;;376:6:30;:38;;;:32;:38;;;;;:45;;-1:-1:-1;;376:45:30;417:4;376:45;;;306:122;1573:36:28;1620:54;1677:24;1690:2;:10;;;1677:12;:24::i;:::-;1620:81;;1746:9;848:15:27;:23;;;;784:94;1746:9:28;1720:35;;:14;:22;;;:35;;;1712:62;;;;-1:-1:-1;;;1712:62:28;;16367:2:63;1712:62:28;;;16349:21:63;16406:2;16386:18;;;16379:30;-1:-1:-1;;;16425:18:63;;;16418:44;16479:18;;1712:62:28;16339:164:63;1712:62:28;1831:26;;;;1785:76;;:21;:76::i;:::-;1382:486;;;;;:::o;8548:1111:26:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8710:22:26;:7;-1:-1:-1;8710:15:26;:22::i;:::-;8692:40;-1:-1:-1;8742:10:26;8751:1;8742:10;;:::i;:::-;;;8771:9;:14;;8784:1;8771:14;8763:43;;;;-1:-1:-1;;;8763:43:26;;19655:2:63;8763:43:26;;;19637:21:63;19694:2;19674:18;;;19667:30;-1:-1:-1;;;19713:18:63;;;19706:46;19769:18;;8763:43:26;19627:166:63;8763:43:26;8841:24;:7;8859:5;8841:17;:24::i;:::-;8817:48;;8875:11;8884:2;8875:11;;:::i;:::-;;-1:-1:-1;8919:23:26;:7;8875:11;8919:16;:23::i;:::-;8897:45;;:19;;;:45;8952:10;8961:1;8952:10;;:::i;:::-;;-1:-1:-1;8991:24:26;:7;8952:10;8991:17;:24::i;:::-;8973:15;;;:42;9025:11;9034:2;9025:11;;:::i;:::-;;-1:-1:-1;9063:24:26;:7;9025:11;9063:17;:24::i;:::-;9047:13;;;:40;9097:11;9106:2;9097:11;;:::i;:::-;;-1:-1:-1;9138:24:26;:7;9097:11;9138:17;:24::i;:::-;9119:16;;;:43;9172:11;9181:2;9172:11;;:::i;:::-;;-1:-1:-1;9255:10:26;9264:1;9172:11;9255:10;:::i;:::-;;;9297:49;9311:5;9343:2;9335:5;9318:7;:14;:22;;;;:::i;:::-;:27;;;;:::i;:::-;9297:7;;:49;:13;:49::i;:::-;9275:12;;;:72;9430:14;;;-1:-1:-1;9455:10:26;9464:1;9430:14;9455:10;:::i;:::-;;-1:-1:-1;9494:23:26;:7;9455:10;9494:16;:23::i;:::-;9475:42;;:16;;;:42;9528:11;9537:2;9528:11;;:::i;:::-;;-1:-1:-1;9563:24:26;:7;9528:11;9563:17;:24::i;:::-;9549:11;;;:38;-1:-1:-1;9549:8:26;;8548:1111;-1:-1:-1;;8548:1111:26:o;322:101:29:-;369:7;395:21;1515:26:27;;-1:-1:-1;;;;;1515:26:27;;1438:110;395:21:29;388:28;;322:101;:::o;429:1101::-;1569:12;1584:35;901:66:47;1251:54;-1:-1:-1;;;;;1251:54:47;;1172:140;1584:35:29;1569:50;;1652:19;1666:4;-1:-1:-1;;;;;493:39:27;470:4;493:39;;;:33;:39;;;;;;;;;412:127;1652:19:29;1651:20;1630:86;;;;-1:-1:-1;;;1630:86:29;;20000:2:63;1630:86:29;;;19982:21:63;20039:2;20019:18;;;20012:30;-1:-1:-1;;;20058:18:63;;;20051:49;20117:18;;1630:86:29;19972:169:63;1630:86:29;1727:20;1742:4;-1:-1:-1;;;;;237:49:30;:6;:49;;;:33;:49;;;;;:56;;-1:-1:-1;;237:56:30;289:4;237:56;;;170:130;1727:20:29;556:14:::1;580:12:::0;595:9:::1;848:15:27::0;:23;;;;784:94;595:9:29::1;580:24;;678:5;:10;;687:1;678:10;667:825;;;704:2;693:13;;667:825;;;739:5;:10;;748:1;739:10;735:757;;;765:2;754:13;;735:757;;;795:5;:10;;804:1;795:10;791:701;;;821:2;810:13;;791:701;;;855:5;:10;;864:1;855:10;851:641;;;881:1;870:12;;851:641;;;917:5;:10;;926:1;917:10;913:579;;;943:1;932:12;;913:579;;;975:5;:10;;984:1;975:10;971:521;;;1001:1;990:12;;971:521;;;1034:5;:11;;1043:2;1034:11;1030:462;;;1060:1;1049:12;;1030:462;;;1093:5;:11;;1102:2;1093:11;1089:403;;;1119:1;1108:12;;1089:403;;;1152:5;:11;;1161:2;1152:11;1148:344;;;1178:1;1167:12;;1148:344;;;1210:5;:11;;1219:2;1210:11;1206:286;;;1236:1;1225:12;;1206:286;;;1269:5;:11;;1278:2;1269:11;1265:227;;;1295:1;1284:12;;1265:227;;;1326:5;:11;;1335:2;1326:11;1322:170;;;1352:1;1341:12;;1322:170;;;1387:5;:11;;1396:2;1387:11;1383:109;;;1413:2;1402:13;;1383:109;;;1454:27;::::0;-1:-1:-1;;;1454:27:29;;18562:2:63;1454:27:29::1;::::0;::::1;18544:21:63::0;18601:2;18581:18;;;18574:30;-1:-1:-1;;;18620:18:63;;;18613:47;18677:18;;1454:27:29::1;18534:167:63::0;1383:109:29::1;1803:15:30::0;:35;;-1:-1:-1;;1803:35:30;;;;;;;;;1758:1:29::1;;429:1101:::0;:::o;831:493:28:-;896:22;920:10;932:20;956:29;975:9;956:18;:29::i;:::-;895:90;;;;;;1003:5;1010:6;995:22;;;;;-1:-1:-1;;;995:22:28;;;;;;;;:::i;:::-;;1028:36;1056:2;:7;;;376:6:30;:38;;;:32;:38;;;;;:45;;-1:-1:-1;;376:45:30;417:4;376:45;;;306:122;1028:36:28;1075:43;1121:30;1140:2;:10;;;1121:18;:30::i;:::-;1075:76;;1187:9;848:15:27;:23;;;;784:94;1187:9:28;1170:26;;:5;:13;;;:26;;;:48;;;-1:-1:-1;1200:13:28;;;;:18;;;1170:48;1162:77;;;;-1:-1:-1;;;1162:77:28;;20348:2:63;1162:77:28;;;20330:21:63;20387:2;20367:18;;;20360:30;-1:-1:-1;;;20406:18:63;;;20399:46;20462:18;;1162:77:28;20320:166:63;1162:77:28;1250:67;1274:5;:20;;;1296:5;:20;;;1008:37:30;;;;:6;:37;;;:28;:37;;;;;:54;916:153;4002:102:26;4069:28;4087:9;4069:17;:28::i;:::-;4002:102;:::o;569:3109::-;702:15;767:17;794:20;828:21;843:5;-1:-1:-1;;;;;1636:28:27;1614:4;1636:28;;;:21;:28;;;;;;;;;1554:117;828:21:26;824:602;;;896:5;-1:-1:-1;;;;;878:32:26;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;865:47;;959:5;-1:-1:-1;;;;;941:39:26;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;926:56;;824:602;;;848:15:27;:23;;;1184:58:26;;-1:-1:-1;;;1184:58:26;;-1:-1:-1;;;1184:58:26;;;14791:52:63;1013:22:26;;-1:-1:-1;;;;;;1072:23:26;;;-1:-1:-1;1072:23:26;;1184:31;;14764:18:63;;1184:58:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1176:104;;;;-1:-1:-1;;;1176:104:26;;26066:2:63;1176:104:26;;;26048:21:63;26105:2;26085:18;;;26078:30;26144:34;26124:18;;;26117:62;-1:-1:-1;;;26195:18:63;;;26188:31;26236:19;;1176:104:26;26038:223:63;1176:104:26;1302:66;;-1:-1:-1;;;1302:66:26;;-1:-1:-1;;;1302:66:26;;;14791:52:63;-1:-1:-1;;;;;1302:31:26;;;;;14764:18:63;;1302:66:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1294:121;;;;-1:-1:-1;;;1294:121:26;;24152:2:63;1294:121:26;;;24134:21:63;24191:2;24171:18;;;24164:30;24230:34;24210:18;;;24203:62;-1:-1:-1;;;24281:18:63;;;24274:40;24331:19;;1294:121:26;24124:232:63;1294:121:26;1436:26;1472:24;1506:23;1557:10;:15;;1571:1;1557:15;1553:394;;1665:35;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1665:35:26;-1:-1:-1;;;1665:35:26;;;1648:53;;1618:26;;-1:-1:-1;;;;;1648:16:26;;;:53;;1665:35;1648:53;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1766:33:26;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1766:33:26;-1:-1:-1;;;1766:33:26;;;1749:51;;1616:85;;-1:-1:-1;1721:24:26;;-1:-1:-1;;;;;;1749:16:26;;;:51;;1766:33;1749:51;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1719:81;;;1844:13;1833:35;;;;;;;;;;;;:::i;:::-;1818:50;;1910:11;1899:33;;;;;;;;;;;;:::i;:::-;1886:46;;1553:394;;;1963:23;1990:5;-1:-1:-1;;;;;1990:16:26;2052:7;2007:53;;;;;;14611:25:63;;14599:2;14584:18;;14566:76;2007:53:26;;;;-1:-1:-1;;2007:53:26;;;;;;;;;;;;;;-1:-1:-1;;;;;2007:53:26;-1:-1:-1;;;2007:53:26;;;1990:71;;;2007:53;1990:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1961:100;;;2098:10;2087:32;;;;;;;;;;;;:::i;:::-;2075:44;;569:3109;2140:14;2164:12;2190:10;:15;;2204:1;2190:15;2186:914;;;-1:-1:-1;;;;;;;;2300:38:26;-1:-1:-1;;;;;;;;;;1784:24:27;;;:15;:24;;;;;1777:31;;;;;;;;;;;;;;;;;;;;;;2300:38:26;2381:12;;;;2414:10;;2381:12;;-1:-1:-1;2414:10:26;-1:-1:-1;2300:58:26;-1:-1:-1;2438:22:26;2452:7;1710:6:30;:24;;;:15;:24;;;;;1703:31;;;;;;1644:97;2438:22:26;2186:914;;;;-1:-1:-1;;3021:2:26;3003:21;;;2997:28;3056:19;;;3050:26;2500:590;3110:67;;-1:-1:-1;;;3110:67:26;;3142:10;3110:67;;;13422:34:63;3162:4:26;13472:18:63;;;13465:43;13524:18;;;13517:34;;;-1:-1:-1;;;;;3110:31:26;;;;;13357:18:63;;3110:67:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3205:9;848:15:27;:23;;;;784:94;3205:9:26;3191:23;;:10;:23;;;3187:92;;3230:38;;-1:-1:-1;;;3230:38:26;;;;;14611:25:63;;;-1:-1:-1;;;;;3230:29:26;;;;;14584:18:63;;3230:38:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3187:92;3300:371;3312:340;;;;;;;;3367:12;3312:340;;;;3408:10;3312:340;;;;;;3480:6;3312:340;;;;3447:4;3312:340;;;;3515:7;3312:340;;;;3551:9;3312:340;;;;3589:9;3312:340;;;;3627:14;3312:340;;;;;3654:9;3665:5;3300:11;:371::i;:::-;3289:382;569:3109;-1:-1:-1;;;;;;;;;;;;;569:3109:26:o;7898:644::-;7986:20;8142:3;8118:8;:12;;;8112:26;:33;;8104:80;;;;-1:-1:-1;;;8104:80:26;;24563:2:63;8104:80:26;;;24545:21:63;24602:2;24582:18;;;24575:30;24641:34;24621:18;;;24614:62;-1:-1:-1;;;24692:18:63;;;24685:32;24734:19;;8104:80:26;24535:224:63;8104:80:26;8257:21;;8292:19;;;;;8325:15;;;;;8354:13;;;;8381:16;;;;8423:12;;;;8417:26;;8484:11;;;;8509:16;;;;8205:330;;;;8241:1;;8257:21;;8292:19;8417:26;;8423:12;8509:16;8205:330;;:::i;:::-;;;;;;;;;;;;;8195:340;;7898:644;;;:::o;4000:720:28:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4191:24:28;:7;-1:-1:-1;4191:17:28;:24::i;:::-;4176:39;;4225:11;4234:2;4225:11;;:::i;:::-;4254:12;;4225:11;;-1:-1:-1;708:66:28;4254:22;4246:72;;;;-1:-1:-1;;;4246:72:28;;23342:2:63;4246:72:28;;;23324:21:63;23381:2;23361:18;;;23354:30;23420:34;23400:18;;;23393:62;-1:-1:-1;;;23471:18:63;;;23464:35;23516:19;;4246:72:28;23314:227:63;4246:72:28;4344:22;:7;4360:5;4344:15;:22::i;:::-;4329:37;;:12;;;:37;4376:10;4385:1;4376:10;;:::i;:::-;;;4404:5;:12;;;:17;;4420:1;4404:17;4396:67;;;;-1:-1:-1;;;4396:67:28;;25660:2:63;4396:67:28;;;25642:21:63;25699:2;25679:18;;;25672:30;25738:34;25718:18;;;25711:62;-1:-1:-1;;;25789:18:63;;;25782:35;25834:19;;4396:67:28;25632:227:63;4396:67:28;4490:23;:7;4507:5;4490:16;:23::i;:::-;4474:39;;:13;;;:39;4523:10;4532:1;4523:10;;:::i;:::-;;-1:-1:-1;4584:24:28;:7;4523:10;4584:17;:24::i;:::-;4564:17;;;:44;4618:11;4627:2;4618:11;;:::i;:::-;;;4666:5;4648:7;:14;:23;4640:73;;;;-1:-1:-1;;;4640:73:28;;17114:2:63;4640:73:28;;;17096:21:63;17153:2;17133:18;;;17126:30;17192:34;17172:18;;;17165:62;-1:-1:-1;;;17243:18:63;;;17236:35;17288:19;;4640:73:28;17086:227:63;14814:320:23;14893:7;14937:11;:6;14946:2;14937:11;:::i;:::-;14920:6;:13;:28;;14912:62;;;;-1:-1:-1;;;14912:62:23;;22223:2:63;14912:62:23;;;22205:21:63;22262:2;22242:18;;;22235:30;-1:-1:-1;;;22281:18:63;;;22274:51;22342:18;;14912:62:23;22195:171:63;14912:62:23;-1:-1:-1;15058:30:23;15074:4;15058:30;15052:37;;14814:320::o;12627:302::-;12704:5;12746:10;:6;12755:1;12746:10;:::i;:::-;12729:6;:13;:27;;12721:60;;;;-1:-1:-1;;;12721:60:23;;25312:2:63;12721:60:23;;;25294:21:63;25351:2;25331:18;;;25324:30;-1:-1:-1;;;25370:18:63;;;25363:49;25429:18;;12721:60:23;25284:169:63;12721:60:23;-1:-1:-1;12857:29:23;12873:3;12857:29;12851:36;;12627:302::o;12935:305::-;13013:6;13056:10;:6;13065:1;13056:10;:::i;:::-;13039:6;:13;:27;;13031:60;;;;-1:-1:-1;;;13031:60:23;;18213:2:63;13031:60:23;;;18195:21:63;18252:2;18232:18;;;18225:30;-1:-1:-1;;;18271:18:63;;;18264:50;18331:18;;13031:60:23;18185:170:63;13031:60:23;-1:-1:-1;13168:29:23;13184:3;13168:29;13162:36;;12935:305::o;1874:749:28:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1979:12:28;1993:27;2032:22;2056:10;2068:20;2092:10;717:9:27;755:15;-1:-1:-1;;;;;755:15:27;;676:102;2092:10:28;-1:-1:-1;;;;;2092:27:28;;2120:9;2092:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2092:38:28;;;;;;;;;;;;:::i;:::-;2031:99;;;;;;2145:5;2141:61;;2173:2;;-1:-1:-1;2177:5:28;-1:-1:-1;2184:6:28;-1:-1:-1;2165:26:28;;2141:61;958:15:27;:33;;;;;;2216:40:28;;:2;:17;;;:40;;;2212:115;;-1:-1:-1;;2272:44:28;;;;;;;;;;;;-1:-1:-1;;;2272:44:28;;;;2280:2;;-1:-1:-1;2284:5:28;;-1:-1:-1;2272:44:28;-1:-1:-1;2272:44:28;;2212:115;1080:34:27;;2340:2:28;:17;;;:41;2336:119;;-1:-1:-1;;2397:47:28;;;;;;;;;;;;;;;;;2405:2;;-1:-1:-1;2409:5:28;;-1:-1:-1;2397:47:28;-1:-1:-1;2397:47:28;;2336:119;2495:7;;;;338:4:27;361:38;;;:32;:38;;;;;;;;2465:120:28;;;2526:2;2530:5;2518:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;2465:120;-1:-1:-1;;2595:21:28;;;;;;;;;-1:-1:-1;2595:21:28;;2603:2;;-1:-1:-1;2607:4:28;;-1:-1:-1;2595:21:28;-1:-1:-1;1874:749:28;;;;;;:::o;2715:475::-;2792:29;2824:20;901:66:47;1251:54;-1:-1:-1;;;;;1251:54:47;;1172:140;2824:20:28;2792:52;;2855:29;2866:17;2855:10;:29::i;:::-;3026:39;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3026:39:28;-1:-1:-1;;;3026:39:28;;;2995:71;;2958:12;;;;-1:-1:-1;;;;;2995:30:28;;;:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2957:109;;;;3085:7;3101:6;3077:32;;;;;-1:-1:-1;;;3077:32:28;;;;;;;;:::i;:::-;;3165:17;-1:-1:-1;;;;;3125:58:28;3142:21;-1:-1:-1;;;;;3125:58:28;;;;;;;;;;;2715:475;;;;:::o;14497:311:23:-;14576:7;14620:11;:6;14629:2;14620:11;:::i;:::-;14603:6;:13;:28;;14595:62;;;;-1:-1:-1;;;14595:62:23;;20693:2:63;14595:62:23;;;20675:21:63;20732:2;20712:18;;;20705:30;-1:-1:-1;;;20751:18:63;;;20744:51;20812:18;;14595:62:23;20665:171:63;9457:2804:23;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:23;;19312:2:63;9631:50:23;;;19294:21:63;19351:2;19331:18;;;19324:30;-1:-1:-1;;;19370:18:63;;;19363:44;19424:18;;9631:50:23;19284:164:63;9631:50:23;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:23;;24966:2:63;9691:63:23;;;24948:21:63;25005:2;24985:18;;;24978:30;-1:-1:-1;;;25024:18:63;;;25017:47;25081:18;;9691:63:23;24938:167:63;9691:63:23;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:23;;;11804:2;11787:11;-1:-1:-1;;11783:25:23;11777:4;11770:39;-1:-1:-1;9821:2397:23;-1:-1:-1;12245:9:23;9457:2804;-1:-1:-1;;;;9457:2804:23:o;4144:1856:26:-;4215:22;4239:10;4251:20;4275:10;717:9:27;755:15;-1:-1:-1;;;;;755:15:27;;676:102;4275:10:26;-1:-1:-1;;;;;4275:27:26;;4303:9;4275:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4275:38:26;;;;;;;;;;;;:::i;:::-;4214:99;;;;;;4332:5;4339:6;4324:22;;;;;-1:-1:-1;;;4324:22:26;;;;;;;;:::i;:::-;;4364:18;4379:2;4364:14;:18::i;:::-;4356:46;;;;-1:-1:-1;;;4356:46:26;;17869:2:63;4356:46:26;;;17851:21:63;17908:2;17888:18;;;17881:30;-1:-1:-1;;;17927:18:63;;;17920:45;17982:18;;4356:46:26;17841:165:63;4356:46:26;4413:41;4457:25;4471:2;:10;;;4457:13;:25::i;:::-;4413:69;;4502:28;4522:2;:7;;;609:4:27;632:31;;;:25;:31;;;;;;;;;545:125;4502:28:26;4501:29;4493:68;;;;-1:-1:-1;;;4493:68:26;;22987:2:63;4493:68:26;;;22969:21:63;23026:2;23006:18;;;22999:30;23065:28;23045:18;;;23038:56;23111:18;;4493:68:26;22959:176:63;4493:68:26;4571:29;4592:2;:7;;;497:6:30;:31;;;:25;:31;;;;;:38;;-1:-1:-1;;497:38:30;531:4;497:38;;;434:108;4571:29:26;848:15:27;:23;;;4619:29:26;;:8;:16;;;:29;;;4611:62;;;;-1:-1:-1;;;4611:62:26;;17520:2:63;4611:62:26;;;17502:21:63;17559:2;17539:18;;;17532:30;-1:-1:-1;;;17578:18:63;;;17571:50;17638:18;;4611:62:26;17492:170:63;4611:62:26;4684:21;4742:9;848:15:27;:23;;;;784:94;4742:9:26;4719:32;;:8;:19;;;:32;;;4715:528;;;-1:-1:-1;4815:21:26;;4715:528;;;4871:15;4889:56;4902:8;:19;;;4923:8;:21;;;4889:12;:56::i;:::-;4871:74;-1:-1:-1;;;;;;5030:21:26;;5026:160;;5081:90;5096:8;:19;;;5117:8;:21;;;5140:8;:13;;;5155:8;:15;;;5081:14;:90::i;:::-;5071:100;;5026:160;5224:7;-1:-1:-1;4715:528:26;5350:11;;;;848:15:27;:23;;;5379:32:26;;:8;:19;;;:32;;;5375:619;;5431:8;:19;;;:24;;5454:1;5431:24;5427:298;;;5558:16;;;;5576:133;;;;;;;;5631:13;;;;5576:133;;-1:-1:-1;;;5675:15:26;5576:133;;;;;;;-1:-1:-1;1599:24:30;;;:15;:24;;;;;;:32;;;;;;;;;;5546:164:26;5839:16;;;;5857:12;;;;5773:97;;-1:-1:-1;;;5773:97:26;;-1:-1:-1;;;;;5773:46:26;;;;;:97;;5820:17;;5839:16;5857:12;5773:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5375:619;;;5966:16;;;;5901:82;;-1:-1:-1;;;5901:82:26;;5940:4;5901:82;;;13422:34:63;-1:-1:-1;;;;;13492:15:63;;;13472:18;;;13465:43;13524:18;;;13517:34;;;;5901:30:26;;;;;;13357:18:63;;5901:82:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5375:619;4144:1856;;;;;;;:::o;3684:312::-;3799:15;3826:20;3849:24;3864:8;3849:14;:24::i;:::-;3826:47;;3895:10;717:9:27;755:15;-1:-1:-1;;;;;755:15:27;;676:102;3895:10:26;-1:-1:-1;;;;;3895:25:26;;3942:9;3962:5;3969:7;3978:10;1886:15:27;:24;;;;;;;;1821:96;3978:10:26;3895:94;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3884:105;3684:312;-1:-1:-1;;;;;3684:312:26:o;1768:152:47:-;1834:37;1853:17;1834:18;:37::i;:::-;1886:27;;-1:-1:-1;;;;;1886:27:47;;;;;;;;1768:152;:::o;7680:212:26:-;7751:4;7808:2;:17;;;7770:34;7786:2;:17;;;1387:38:27;;1362:7;1387:38;;;:28;:38;;;;;;;1299:133;7770:34:26;:55;7766:97;;;-1:-1:-1;7848:4:26;;7680:212;-1:-1:-1;7680:212:26:o;7766:97::-;-1:-1:-1;7880:5:26;;7680:212;-1:-1:-1;7680:212:26:o;6053:1621::-;6166:13;6213:9;848:15:27;:23;;;;784:94;6213:9:26;6199:23;;:10;:23;;;;6191:76;;;;-1:-1:-1;;;6191:76:26;;21814:2:63;6191:76:26;;;21796:21:63;21853:2;21833:18;;;21826:30;21892:34;21872:18;;;21865:62;-1:-1:-1;;;21943:18:63;;;21936:38;21991:19;;6191:76:26;21786:230:63;6191:76:26;6335:1;6285:38;6298:10;6310:12;6285;:38::i;:::-;-1:-1:-1;;;;;6285:52:26;;6277:93;;;;-1:-1:-1;;;6277:93:26;;21457:2:63;6277:93:26;;;21439:21:63;21496:2;21476:18;;;21469:30;21535;21515:18;;;21508:58;21583:18;;6277:93:26;21429:178:63;6277:93:26;6454:10;:15;;6468:1;6454:15;6450:313;;;6554:66;;-1:-1:-1;;;;6686:66:26;-1:-1:-1;6450:313:26;6817:31;-1:-1:-1;;;6938:21:26;6954:4;6938:15;:21::i;:::-;6973:23;6989:6;6973:15;:23::i;:::-;7019:4;7039:10;7063:12;6851:234;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6851:234:26;;;;;;;;;;;;;;;-1:-1:-1;;;;;6851:234:26;-1:-1:-1;;;;;;6851:234:26;;;;;;;;;;7165:45;6851:234;;-1:-1:-1;;;7165:45:26;;7184:4;;6851:234;;7165:45;;:::i;:::-;;;;;;;;;;;;;7134:76;;7248:21;7289:28;;;;;;;;:::i;:::-;-1:-1:-1;;7289:28:26;;;;;;;;;;;;;;;;7272:63;;7289:28;7319:15;;7289:28;7272:63;;:::i;:::-;;;;-1:-1:-1;;7272:63:26;;;;;;;;;;-1:-1:-1;;;;;;11858:3:63;11836:16;;;11832:38;7272:63:26;7371:42;;11820:51:63;11887:11;;;11880:27;;;7272:63:26;-1:-1:-1;7346:12:26;;11923::63;;7371:42:26;;;;;;;;;;;;7361:53;;;;;;7346:68;;7506:4;7495:8;7489:15;7482:4;7472:8;7468:19;7465:1;7457:54;7448:63;;7547:5;7535:18;7525:2;;7583:1;7580;7573:12;7525:2;1384:34:30;;;:6;:34;;;:20;:34;;;;;;;;:48;;;;;;;;:58;;-1:-1:-1;;;;;;1384:58:30;-1:-1:-1;;;;;1384:58:30;;;;;;;;1452:30;;:21;:30;;;;;:37;;-1:-1:-1;;1452:37:30;-1:-1:-1;1452:37:30;;;6053:1621:26;;;;;;;;;;:::o;1403:259:47:-;1034:20:57;;1476:95:47;;;;-1:-1:-1;;;1476:95:47;;22573:2:63;1476:95:47;;;22555:21:63;22612:2;22592:18;;;22585:30;22651:34;22631:18;;;22624:62;-1:-1:-1;;;22702:18:63;;;22695:43;22755:19;;1476:95:47;22545:235:63;1476:95:47;901:66;1581:74;;-1:-1:-1;;;;;;1581:74:47;-1:-1:-1;;;;;1581:74:47;;;;;;;;;;1403:259::o;9967:328:26:-;10030:13;10055:9;10074:60;10085:2;10081:1;:6;:23;;;;;10091:5;10097:1;10091:8;;;;;-1:-1:-1;;;10091:8:26;;;;;;;;;;;;-1:-1:-1;;;;;;10091:13:26;;;10081:23;10074:60;;;10120:3;;;;:::i;:::-;;;;10074:60;;;10143:18;10174:1;-1:-1:-1;;;;;10164:12:26;;;;;-1:-1:-1;;;10164:12:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10164:12:26;;10143:33;;10191:6;10186:73;10207:1;10203;:5;10186:73;;;10240:5;10246:1;10240:8;;;;;-1:-1:-1;;;10240:8:26;;;;;;;;;;;;10229:5;10235:1;10229:8;;;;;;-1:-1:-1;;;10229:8:26;;;;;;;;;;;;:19;-1:-1:-1;;;;;10229:19:26;;;;;;;;-1:-1:-1;10210:3:26;;;;:::i;:::-;;;;10186:73;;;-1:-1:-1;10282:5:26;9967:328;-1:-1:-1;;;9967:328:26:o;-1:-1:-1:-;;;;;;;;:::o;14:336:63:-;78:5;107:52;123:35;151:6;123:35;:::i;:::-;107:52;:::i;:::-;98:61;;182:6;175:5;168:21;222:3;213:6;208:3;204:16;201:25;198:2;;;239:1;236;229:12;198:2;288:6;283:3;276:4;269:5;265:16;252:43;342:1;335:4;326:6;319:5;315:18;311:29;304:40;88:262;;;;;:::o;355:173::-;423:20;;-1:-1:-1;;;;;472:31:63;;462:42;;452:2;;518:1;515;508:12;452:2;404:124;;;:::o;533:1169::-;607:5;660:3;653:4;645:6;641:17;637:27;627:2;;682:5;675;668:20;627:2;715:6;709:13;741:4;-1:-1:-1;;;;;760:2:63;757:26;754:2;;;786:18;;:::i;:::-;826:36;858:2;853;850:1;846:10;842:19;826:36;:::i;:::-;884:3;908:2;903:3;896:15;936:2;931:3;927:12;920:19;;971:2;963:6;959:15;1023:3;1018:2;1012;1009:1;1005:10;997:6;993:23;989:32;986:41;983:2;;;1044:5;1037;1030:20;983:2;1070:5;1084:589;1098:2;1095:1;1092:9;1084:589;;;1153:4;1192:2;1186:3;1181;1177:13;1173:22;1170:2;;;1212:5;1205;1198:20;1170:2;1246:22;;:::i;:::-;1301:3;1295:10;1288:5;1281:25;1357:2;1352:3;1348:12;1342:19;1337:2;1330:5;1326:14;1319:43;1385:2;1423:41;1460:2;1455:3;1451:12;1423:41;:::i;:::-;1407:14;;;1400:65;1488:2;1526:41;1554:12;;;1526:41;:::i;:::-;1510:14;;;1503:65;1581:18;;1619:12;;;;1651;;;;;1116:1;1109:9;1084:589;;;-1:-1:-1;1691:5:63;;617:1085;-1:-1:-1;;;;;;;617:1085:63:o;1707:164::-;1783:13;;1832;;1825:21;1815:32;;1805:2;;1861:1;1858;1851:12;1876:444;1929:5;1982:3;1975:4;1967:6;1963:17;1959:27;1949:2;;2004:5;1997;1990:20;1949:2;2037:6;2031:13;2068:48;2084:31;2112:2;2084:31;:::i;2068:48::-;2141:2;2132:7;2125:19;2187:3;2180:4;2175:2;2167:6;2163:15;2159:26;2156:35;2153:2;;;2208:5;2201;2194:20;2153:2;2225:64;2286:2;2279:4;2270:7;2266:18;2259:4;2251:6;2247:17;2225:64;:::i;:::-;2307:7;1939:381;-1:-1:-1;;;;1939:381:63:o;2325:229::-;2368:5;2421:3;2414:4;2406:6;2402:17;2398:27;2388:2;;2443:5;2436;2429:20;2388:2;2469:79;2544:3;2535:6;2522:20;2515:4;2507:6;2503:17;2469:79;:::i;:::-;2460:88;2378:176;-1:-1:-1;;;2378:176:63:o;2559:132::-;2626:20;;2655:30;2626:20;2655:30;:::i;2696:136::-;2774:13;;2796:30;2774:13;2796:30;:::i;2837:136::-;2915:13;;2937:30;2915:13;2937:30;:::i;2978:175::-;3056:13;;-1:-1:-1;;;;;3098:30:63;;3088:41;;3078:2;;3143:1;3140;3133:12;3158:160;3235:13;;3288:4;3277:16;;3267:27;;3257:2;;3308:1;3305;3298:12;3323:196;3382:6;3435:2;3423:9;3414:7;3410:23;3406:32;3403:2;;;3456:6;3448;3441:22;3403:2;3484:29;3503:9;3484:29;:::i;3524:858::-;3621:6;3629;3637;3645;3653;3706:3;3694:9;3685:7;3681:23;3677:33;3674:2;;;3728:6;3720;3713:22;3674:2;3756:29;3775:9;3756:29;:::i;:::-;3746:39;;3804:38;3838:2;3827:9;3823:18;3804:38;:::i;:::-;3794:48;;3889:2;3878:9;3874:18;3861:32;3851:42;;3944:2;3933:9;3929:18;3916:32;-1:-1:-1;;;;;4008:2:63;4000:6;3997:14;3994:2;;;4029:6;4021;4014:22;3994:2;4072:6;4061:9;4057:22;4047:32;;4117:7;4110:4;4106:2;4102:13;4098:27;4088:2;;4144:6;4136;4129:22;4088:2;4189;4176:16;4215:2;4207:6;4204:14;4201:2;;;4236:6;4228;4221:22;4201:2;4286:7;4281:2;4272:6;4268:2;4264:15;4260:24;4257:37;4254:2;;;4312:6;4304;4297:22;4254:2;3664:718;;;;-1:-1:-1;3664:718:63;;-1:-1:-1;4348:2:63;4340:11;;4370:6;3664:718;-1:-1:-1;;;3664:718:63:o;4387:606::-;4480:6;4488;4496;4504;4512;4565:3;4553:9;4544:7;4540:23;4536:33;4533:2;;;4587:6;4579;4572:22;4533:2;4615:29;4634:9;4615:29;:::i;:::-;4605:39;;4691:2;4680:9;4676:18;4663:32;4653:42;;4745:2;4734:9;4730:18;4717:32;4758:30;4782:5;4758:30;:::i;:::-;4807:5;-1:-1:-1;4859:2:63;4844:18;;4831:32;;-1:-1:-1;4915:3:63;4900:19;;4887:33;4929:32;4887:33;4929:32;:::i;:::-;4980:7;4970:17;;;4523:470;;;;;;;;:::o;4998:212::-;5065:6;5118:2;5106:9;5097:7;5093:23;5089:32;5086:2;;;5139:6;5131;5124:22;5086:2;5167:37;5194:9;5167:37;:::i;5215:190::-;5274:6;5327:2;5315:9;5306:7;5302:23;5298:32;5295:2;;;5348:6;5340;5333:22;5295:2;-1:-1:-1;5376:23:63;;5285:120;-1:-1:-1;5285:120:63:o;5410:194::-;5480:6;5533:2;5521:9;5512:7;5508:23;5504:32;5501:2;;;5554:6;5546;5539:22;5501:2;-1:-1:-1;5582:16:63;;5491:113;-1:-1:-1;5491:113:63:o;5609:479::-;5677:6;5730:2;5718:9;5709:7;5705:23;5701:32;5698:2;;;5751:6;5743;5736:22;5698:2;5796:9;5783:23;-1:-1:-1;;;;;5821:6:63;5818:30;5815:2;;;5866:6;5858;5851:22;5815:2;5894:22;;5947:4;5939:13;;5935:27;-1:-1:-1;5925:2:63;;5981:6;5973;5966:22;5925:2;6009:73;6074:7;6069:2;6056:16;6051:2;6047;6043:11;6009:73;:::i;6093:356::-;6173:6;6226:2;6214:9;6205:7;6201:23;6197:32;6194:2;;;6247:6;6239;6232:22;6194:2;6285:9;6279:16;-1:-1:-1;;;;;6310:6:63;6307:30;6304:2;;;6355:6;6347;6340:22;6304:2;6383:60;6435:7;6426:6;6415:9;6411:22;6383:60;:::i;6454:1077::-;6540:6;6593:2;6581:9;6572:7;6568:23;6564:32;6561:2;;;6614:6;6606;6599:22;6561:2;6659:9;6646:23;-1:-1:-1;;;;;6729:2:63;6721:6;6718:14;6715:2;;;6750:6;6742;6735:22;6715:2;6778:22;;;;6834:6;6816:16;;;6812:29;6809:2;;;6859:6;6851;6844:22;6809:2;6890:22;;:::i;:::-;6948:2;6935:16;6928:5;6921:31;6984:30;7010:2;7006;7002:11;6984:30;:::i;:::-;6979:2;6972:5;6968:14;6961:54;7068:2;7064;7060:11;7047:25;7042:2;7035:5;7031:14;7024:49;7126:2;7122;7118:11;7105:25;7100:2;7093:5;7089:14;7082:49;7185:3;7181:2;7177:12;7164:26;7158:3;7151:5;7147:15;7140:51;7237:3;7233:2;7229:12;7216:26;7267:2;7257:8;7254:16;7251:2;;;7288:6;7280;7273:22;7251:2;7330:45;7367:7;7356:8;7352:2;7348:17;7330:45;:::i;:::-;7324:3;7317:5;7313:15;7306:70;;7430:3;7426:2;7422:12;7409:26;7403:3;7396:5;7392:15;7385:51;7469:31;7495:3;7491:2;7487:12;7469:31;:::i;:::-;7463:3;7452:15;;7445:56;7456:5;6551:980;-1:-1:-1;;;;;6551:980:63:o;7536:1844::-;7651:6;7659;7667;7720:2;7708:9;7699:7;7695:23;7691:32;7688:2;;;7741:6;7733;7726:22;7688:2;7779:9;7773:16;-1:-1:-1;;;;;7849:2:63;7841:6;7838:14;7835:2;;;7870:6;7862;7855:22;7835:2;7898:22;;;;7954:6;7936:16;;;7932:29;7929:2;;;7979:6;7971;7964:22;7929:2;8010:22;;:::i;:::-;8055:31;8083:2;8055:31;:::i;:::-;8048:5;8041:46;8119:41;8156:2;8152;8148:11;8119:41;:::i;:::-;8114:2;8107:5;8103:14;8096:65;8193:41;8230:2;8226;8222:11;8193:41;:::i;:::-;8188:2;8181:5;8177:14;8170:65;8267:41;8304:2;8300;8296:11;8267:41;:::i;:::-;8262:2;8255:5;8251:14;8244:65;8356:3;8352:2;8348:12;8342:19;8336:3;8329:5;8325:15;8318:44;8395:42;8432:3;8428:2;8424:12;8395:42;:::i;:::-;8389:3;8382:5;8378:15;8371:67;8471:41;8507:3;8503:2;8499:12;8471:41;:::i;:::-;8465:3;8458:5;8454:15;8447:66;8552:3;8548:2;8544:12;8538:19;8582:2;8572:8;8569:16;8566:2;;;8603:6;8595;8588:22;8566:2;8645:55;8692:7;8681:8;8677:2;8673:17;8645:55;:::i;:::-;8639:3;8632:5;8628:15;8621:80;;8720:3;8755:41;8792:2;8788;8784:11;8755:41;:::i;:::-;8739:14;;;8732:65;8816:3;8850:11;;;8844:18;8874:16;;;8871:2;;;8908:6;8900;8893:22;8871:2;8949:76;9017:7;9006:8;9002:2;8998:17;8949:76;:::i;:::-;8933:14;;;8926:100;;;;-1:-1:-1;9045:3:63;9086:11;;;9080:18;9064:14;;;9057:42;8937:5;-1:-1:-1;9142:46:63;9184:2;9169:18;;9142:46;:::i;:::-;9132:56;;9234:2;9223:9;9219:18;9213:25;9197:41;;9263:2;9253:8;9250:16;9247:2;;;9284:6;9276;9269:22;9247:2;;9312:62;9366:7;9355:8;9344:9;9340:24;9312:62;:::i;:::-;9302:72;;;7678:1702;;;;;:::o;9385:255::-;9443:6;9496:2;9484:9;9475:7;9471:23;9467:32;9464:2;;;9517:6;9509;9502:22;9464:2;9561:9;9548:23;9580:30;9604:5;9580:30;:::i;9645:259::-;9714:6;9767:2;9755:9;9746:7;9742:23;9738:32;9735:2;;;9788:6;9780;9773:22;9735:2;9825:9;9819:16;9844:30;9868:5;9844:30;:::i;9909:323::-;9976:6;9984;10037:2;10025:9;10016:7;10012:23;10008:32;10005:2;;;10058:6;10050;10043:22;10005:2;10102:9;10089:23;10121:30;10145:5;10121:30;:::i;:::-;10170:5;10222:2;10207:18;;;;10194:32;;-1:-1:-1;;;9995:237:63:o;10432:216::-;10501:6;10554:2;10542:9;10533:7;10529:23;10525:32;10522:2;;;10575:6;10567;10560:22;10522:2;10603:39;10632:9;10603:39;:::i;10653:257::-;10694:3;10732:5;10726:12;10759:6;10754:3;10747:19;10775:63;10831:6;10824:4;10819:3;10815:14;10808:4;10801:5;10797:16;10775:63;:::i;:::-;10892:2;10871:15;-1:-1:-1;;10867:29:63;10858:39;;;;10899:4;10854:50;;10702:208;-1:-1:-1;;10702:208:63:o;10915:274::-;11044:3;11082:6;11076:13;11098:53;11144:6;11139:3;11132:4;11124:6;11120:17;11098:53;:::i;:::-;11167:16;;;;;11052:137;-1:-1:-1;;11052:137:63:o;11194:466::-;11369:3;11407:6;11401:13;11423:53;11469:6;11464:3;11457:4;11449:6;11445:17;11423:53;:::i;:::-;11539:13;;11498:16;;;;11561:57;11539:13;11498:16;11595:4;11583:17;;11561:57;:::i;:::-;11634:20;;11377:283;-1:-1:-1;;;;11377:283:63:o;11946:1023::-;12317:3;12354;12349;12345:13;12401:2;12392:6;12387:3;12383:16;12379:25;12374:3;12367:38;12434:6;12430:1;12425:3;12421:11;12414:27;12469:5;12464:3;12460:15;12527:2;12518:6;12513:3;12509:16;12505:25;12500:2;12495:3;12491:12;12484:47;12561:6;12556:2;12551:3;12547:12;12540:28;12598:6;12593:2;12588:3;12584:12;12577:28;12635:6;12630:2;12625:3;12621:12;12614:28;12695:2;12686:6;12681:3;12677:16;12673:25;12667:3;12662;12658:13;12651:48;12728:6;12722:13;12708:27;;12744:63;12800:6;12794:3;12789;12785:13;12778:4;12770:6;12766:17;12744:63;:::i;:::-;12826:16;;12866:3;12858:12;;12851:28;;;;-1:-1:-1;12917:3:63;12913:16;;;;12909:25;12903:3;12895:12;;12888:47;12959:3;12951:12;;;-1:-1:-1;;;;;;;;12325:644:63:o;13562:314::-;-1:-1:-1;;;;;13737:32:63;;13719:51;;13806:2;13801;13786:18;;13779:30;;;-1:-1:-1;;13826:44:63;;13851:18;;13843:6;13826:44;:::i;13881:387::-;14115:1;14111;14106:3;14102:11;14098:19;14090:6;14086:32;14075:9;14068:51;14155:6;14150:2;14139:9;14135:18;14128:34;14198:2;14193;14182:9;14178:18;14171:30;14049:4;14218:44;14258:2;14247:9;14243:18;14235:6;14218:44;:::i;14854:217::-;15001:2;14990:9;14983:21;14964:4;15021:44;15061:2;15050:9;15046:18;15038:6;15021:44;:::i;15526:634::-;15805:3;15794:9;15787:22;15768:4;15832:45;15872:3;15861:9;15857:19;15849:6;15832:45;:::i;:::-;15925:9;15917:6;15913:22;15908:2;15897:9;15893:18;15886:50;15953:32;15978:6;15970;15953:32;:::i;:::-;-1:-1:-1;;;;;16021:32:63;;;;16016:2;16001:18;;15994:60;-1:-1:-1;;16102:6:63;16090:19;;;;16085:2;16070:18;;16063:47;16141:3;16126:19;;;16119:35;15945:40;15777:383;-1:-1:-1;;15777:383:63:o;27173:904::-;27356:2;27345:9;27338:21;27401:6;27395:13;27390:2;27379:9;27375:18;27368:41;27319:4;27456:2;27448:6;27444:15;27438:22;27479:6;27539:2;27525:12;27521:21;27516:2;27505:9;27501:18;27494:49;27597:2;27589:6;27585:15;27579:22;27574:2;27563:9;27559:18;27552:50;27657:2;27649:6;27645:15;27639:22;27633:3;27622:9;27618:19;27611:51;27717:3;27709:6;27705:16;27699:23;27693:3;27682:9;27678:19;27671:52;27772:3;27764:6;27760:16;27754:23;27732:45;;27796:6;27839:2;27833:3;27822:9;27818:19;27811:31;27865:53;27913:3;27902:9;27898:19;27882:14;27865:53;:::i;:::-;27851:67;;27973:3;27965:6;27961:16;27955:23;27949:3;27938:9;27934:19;27927:52;28044:2;28037:3;28029:6;28025:16;28019:23;28015:32;28010:2;27999:9;27995:18;27988:60;;;28065:6;28057:14;;;27328:749;;;;:::o;28928:381::-;29137:10;29129:6;29125:23;29114:9;29107:42;29185:2;29180;29169:9;29165:18;29158:30;29088:4;29205:44;29245:2;29234:9;29230:18;29222:6;29205:44;:::i;:::-;29197:52;;29297:4;29289:6;29285:17;29280:2;29269:9;29265:18;29258:45;29097:212;;;;;;:::o;29708:253::-;29780:2;29774:9;29822:4;29810:17;;-1:-1:-1;;;;;29842:34:63;;29878:22;;;29839:62;29836:2;;;29904:18;;:::i;:::-;29940:2;29933:22;29754:207;:::o;29966:255::-;30038:2;30032:9;30080:6;30068:19;;-1:-1:-1;;;;;30102:34:63;;30138:22;;;30099:62;30096:2;;;30164:18;;:::i;30226:255::-;30298:2;30292:9;30340:6;30328:19;;-1:-1:-1;;;;;30362:34:63;;30398:22;;;30359:62;30356:2;;;30424:18;;:::i;30486:275::-;30557:2;30551:9;30622:2;30603:13;;-1:-1:-1;;30599:27:63;30587:40;;-1:-1:-1;;;;;30642:34:63;;30678:22;;;30639:62;30636:2;;;30704:18;;:::i;:::-;30740:2;30733:22;30531:230;;-1:-1:-1;30531:230:63:o;30766:186::-;30814:4;-1:-1:-1;;;;;30839:6:63;30836:30;30833:2;;;30869:18;;:::i;:::-;-1:-1:-1;30935:2:63;30914:15;-1:-1:-1;;30910:29:63;30941:4;30906:40;;30823:129::o;30957:128::-;30997:3;31028:1;31024:6;31021:1;31018:13;31015:2;;;31034:18;;:::i;:::-;-1:-1:-1;31070:9:63;;31005:80::o;31090:125::-;31130:4;31158:1;31155;31152:8;31149:2;;;31163:18;;:::i;:::-;-1:-1:-1;31200:9:63;;31139:76::o;31220:258::-;31292:1;31302:113;31316:6;31313:1;31310:13;31302:113;;;31392:11;;;31386:18;31373:11;;;31366:39;31338:2;31331:10;31302:113;;;31433:6;31430:1;31427:13;31424:2;;;31468:1;31459:6;31454:3;31450:16;31443:27;31424:2;;31273:205;;;:::o;31483:135::-;31522:3;-1:-1:-1;;31543:17:63;;31540:2;;;31563:18;;:::i;:::-;-1:-1:-1;31610:1:63;31599:13;;31530:88::o;31623:127::-;31684:10;31679:3;31675:20;31672:1;31665:31;31715:4;31712:1;31705:15;31739:4;31736:1;31729:15;31755:127;31816:10;31811:3;31807:20;31804:1;31797:31;31847:4;31844:1;31837:15;31871:4;31868:1;31861:15;31887:117;31972:6;31965:5;31961:18;31954:5;31951:29;31941:2;;31994:1;31991;31984:12;32009:121;32094:10;32087:5;32083:22;32076:5;32073:33;32063:2;;32120:1;32117;32110:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "bridgeContracts(uint16)": "ad66a5f1",
    "chainId()": "9a8a0592",
    "completeTransfer(bytes)": "c6878519",
    "encodeTransfer((bytes32,uint16,bytes32,bytes32,uint256,string,bytes32,uint16))": "e6a853e0",
    "finality()": "739fc8d1",
    "governanceActionIsConsumed(bytes32)": "2c3c02a4",
    "governanceChainId()": "fbe3c2cd",
    "governanceContract()": "b172b222",
    "implementation()": "5c60da1b",
    "initialize()": "8129fc1c",
    "isInitialized(address)": "d60b347f",
    "isTransferCompleted(bytes32)": "aa4efa5b",
    "isWrappedAsset(address)": "1a2be4da",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "parseRegisterChain(bytes)": "01f53255",
    "parseTransfer(bytes)": "2b511375",
    "parseUpgrade(bytes)": "fbeeacd9",
    "registerChain(bytes)": "a5799f93",
    "splCache(uint256)": "3ca64826",
    "tokenImplementation()": "2f3a3d5d",
    "transferNFT(address,uint256,uint16,bytes32,uint32)": "c96616e1",
    "upgrade(bytes)": "25394645",
    "wormhole()": "84acd1bb",
    "wrappedAsset(uint16,bytes32)": "1ff1e286"
  },
  "ast": {
    "absolutePath": "contracts/nft/NFTBridgeImplementation.sol",
    "id": 9917,
    "exportedSymbols": {
      "Address": [
        36130
      ],
      "BeaconProxy": [
        35320
      ],
      "BridgeNFT": [
        10321
      ],
      "BytesLib": [
        7815
      ],
      "Context": [
        36152
      ],
      "ERC165": [
        36439
      ],
      "ERC1967Upgrade": [
        35186
      ],
      "IBeacon": [
        35330
      ],
      "IERC165": [
        36451
      ],
      "IERC20": [
        35448
      ],
      "IERC721": [
        35788
      ],
      "IERC721Metadata": [
        35833
      ],
      "IERC721Receiver": [
        35806
      ],
      "IWormhole": [
        7482
      ],
      "NFTBridge": [
        9111
      ],
      "NFTBridgeGetters": [
        9276
      ],
      "NFTBridgeGovernance": [
        9737
      ],
      "NFTBridgeImplementation": [
        9916
      ],
      "NFTBridgeSetters": [
        10120
      ],
      "NFTBridgeState": [
        10242
      ],
      "NFTBridgeStorage": [
        10238
      ],
      "NFTBridgeStructs": [
        10282
      ],
      "NFTImplementation": [
        11140
      ],
      "NFTState": [
        11182
      ],
      "NFTStorage": [
        11178
      ],
      "Ownable": [
        34837
      ],
      "Proxy": [
        35238
      ],
      "SafeERC20": [
        35672
      ],
      "StorageSlot": [
        36212
      ],
      "Strings": [
        36415
      ],
      "Structs": [
        2969
      ]
    },
    "nodeType": "SourceUnit",
    "src": "70:1699:29",
    "nodes": [
      {
        "id": 9739,
        "nodeType": "PragmaDirective",
        "src": "70:23:29",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 9740,
        "nodeType": "PragmaDirective",
        "src": "94:33:29",
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ]
      },
      {
        "id": 9741,
        "nodeType": "ImportDirective",
        "src": "129:66:29",
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9917,
        "sourceUnit": 35187,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9742,
        "nodeType": "ImportDirective",
        "src": "197:25:29",
        "absolutePath": "contracts/nft/NFTBridge.sol",
        "file": "./NFTBridge.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9917,
        "sourceUnit": 9112,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9916,
        "nodeType": "ContractDefinition",
        "src": "225:1543:29",
        "nodes": [
          {
            "id": 9753,
            "nodeType": "FunctionDefinition",
            "src": "322:101:29",
            "body": {
              "id": 9752,
              "nodeType": "Block",
              "src": "378:45:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9749,
                      "name": "tokenImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9238,
                      "src": "395:19:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 9750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "395:21:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 9748,
                  "id": 9751,
                  "nodeType": "Return",
                  "src": "388:28:29"
                }
              ]
            },
            "functionSelector": "5c60da1b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "331:14:29",
            "parameters": {
              "id": 9745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "345:2:29"
            },
            "returnParameters": {
              "id": 9748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9747,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9753,
                  "src": "369:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "368:9:29"
            },
            "scope": 9916,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9893,
            "nodeType": "FunctionDefinition",
            "src": "429:1101:29",
            "body": {
              "id": 9892,
              "nodeType": "Block",
              "src": "478:1052:29",
              "statements": [
                {
                  "assignments": [
                    9759
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9759,
                      "mutability": "mutable",
                      "name": "finality",
                      "nameLocation": "562:8:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 9892,
                      "src": "556:14:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 9758,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "556:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9760,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "556:14:29"
                },
                {
                  "assignments": [
                    9762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9762,
                      "mutability": "mutable",
                      "name": "chain",
                      "nameLocation": "587:5:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 9892,
                      "src": "580:12:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 9761,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "580:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9765,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9763,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9179,
                      "src": "595:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint16_$",
                        "typeString": "function () view returns (uint16)"
                      }
                    },
                    "id": 9764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "595:9:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "580:24:29"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 9768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9766,
                      "name": "chain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9762,
                      "src": "678:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 9767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "687:1:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "678:10:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "id": 9776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 9774,
                        "name": "chain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9762,
                        "src": "739:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "34",
                        "id": 9775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "748:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "src": "739:10:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 9784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9782,
                          "name": "chain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9762,
                          "src": "795:5:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 9783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "804:1:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "795:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 9792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9790,
                            "name": "chain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9762,
                            "src": "855:5:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 9791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "864:1:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "855:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 9800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 9798,
                              "name": "chain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9762,
                              "src": "917:5:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "37",
                              "id": 9799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "926:1:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_7_by_1",
                                "typeString": "int_const 7"
                              },
                              "value": "7"
                            },
                            "src": "917:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              "id": 9808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 9806,
                                "name": "chain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9762,
                                "src": "975:5:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "39",
                                "id": 9807,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "984:1:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_9_by_1",
                                  "typeString": "int_const 9"
                                },
                                "value": "9"
                              },
                              "src": "975:10:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                },
                                "id": 9816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 9814,
                                  "name": "chain",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9762,
                                  "src": "1034:5:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "3130",
                                  "id": 9815,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1043:2:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "1034:11:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  "id": 9824,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 9822,
                                    "name": "chain",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9762,
                                    "src": "1093:5:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "3131",
                                    "id": 9823,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1102:2:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_11_by_1",
                                      "typeString": "int_const 11"
                                    },
                                    "value": "11"
                                  },
                                  "src": "1093:11:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    },
                                    "id": 9832,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 9830,
                                      "name": "chain",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9762,
                                      "src": "1152:5:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "3132",
                                      "id": 9831,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1161:2:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_12_by_1",
                                        "typeString": "int_const 12"
                                      },
                                      "value": "12"
                                    },
                                    "src": "1152:11:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      },
                                      "id": 9840,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 9838,
                                        "name": "chain",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9762,
                                        "src": "1210:5:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "3133",
                                        "id": 9839,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1219:2:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_13_by_1",
                                          "typeString": "int_const 13"
                                        },
                                        "value": "13"
                                      },
                                      "src": "1210:11:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        },
                                        "id": 9848,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 9846,
                                          "name": "chain",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9762,
                                          "src": "1269:5:29",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "3134",
                                          "id": 9847,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1278:2:29",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_14_by_1",
                                            "typeString": "int_const 14"
                                          },
                                          "value": "14"
                                        },
                                        "src": "1269:11:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          },
                                          "id": 9856,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 9854,
                                            "name": "chain",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9762,
                                            "src": "1326:5:29",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint16",
                                              "typeString": "uint16"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "hexValue": "3136",
                                            "id": 9855,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1335:2:29",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_16_by_1",
                                              "typeString": "int_const 16"
                                            },
                                            "value": "16"
                                          },
                                          "src": "1326:11:29",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint16",
                                              "typeString": "uint16"
                                            },
                                            "id": 9864,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 9862,
                                              "name": "chain",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9762,
                                              "src": "1387:5:29",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint16",
                                                "typeString": "uint16"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "hexValue": "3137",
                                              "id": 9863,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1396:2:29",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_17_by_1",
                                                "typeString": "int_const 17"
                                              },
                                              "value": "17"
                                            },
                                            "src": "1387:11:29",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": {
                                            "id": 9874,
                                            "nodeType": "Block",
                                            "src": "1440:52:29",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "hexValue": "556e6b6e6f776e20636861696e2069642e",
                                                      "id": 9871,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "string",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "1461:19:29",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_stringliteral_4596325520eaad04652147e5ee2abb3aaa82d3e986042c773958da07cefcb291",
                                                        "typeString": "literal_string \"Unknown chain id.\""
                                                      },
                                                      "value": "Unknown chain id."
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_stringliteral_4596325520eaad04652147e5ee2abb3aaa82d3e986042c773958da07cefcb291",
                                                        "typeString": "literal_string \"Unknown chain id.\""
                                                      }
                                                    ],
                                                    "id": 9870,
                                                    "name": "revert",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                      -19,
                                                      -19
                                                    ],
                                                    "referencedDeclaration": -19,
                                                    "src": "1454:6:29",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                                      "typeString": "function (string memory) pure"
                                                    }
                                                  },
                                                  "id": 9872,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "1454:27:29",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                  }
                                                },
                                                "id": 9873,
                                                "nodeType": "ExpressionStatement",
                                                "src": "1454:27:29"
                                              }
                                            ]
                                          },
                                          "id": 9875,
                                          "nodeType": "IfStatement",
                                          "src": "1383:109:29",
                                          "trueBody": {
                                            "id": 9869,
                                            "nodeType": "Block",
                                            "src": "1400:34:29",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "id": 9867,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "id": 9865,
                                                    "name": "finality",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 9759,
                                                    "src": "1402:8:29",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint8",
                                                      "typeString": "uint8"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "hexValue": "3332",
                                                    "id": 9866,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1413:2:29",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_32_by_1",
                                                      "typeString": "int_const 32"
                                                    },
                                                    "value": "32"
                                                  },
                                                  "src": "1402:13:29",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  }
                                                },
                                                "id": 9868,
                                                "nodeType": "ExpressionStatement",
                                                "src": "1402:13:29"
                                              }
                                            ]
                                          }
                                        },
                                        "id": 9876,
                                        "nodeType": "IfStatement",
                                        "src": "1322:170:29",
                                        "trueBody": {
                                          "id": 9861,
                                          "nodeType": "Block",
                                          "src": "1339:38:29",
                                          "statements": [
                                            {
                                              "expression": {
                                                "id": 9859,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                  "id": 9857,
                                                  "name": "finality",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 9759,
                                                  "src": "1341:8:29",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                  "hexValue": "31",
                                                  "id": 9858,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "1352:1:29",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1_by_1",
                                                    "typeString": "int_const 1"
                                                  },
                                                  "value": "1"
                                                },
                                                "src": "1341:12:29",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              },
                                              "id": 9860,
                                              "nodeType": "ExpressionStatement",
                                              "src": "1341:12:29"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 9877,
                                      "nodeType": "IfStatement",
                                      "src": "1265:227:29",
                                      "trueBody": {
                                        "id": 9853,
                                        "nodeType": "Block",
                                        "src": "1282:34:29",
                                        "statements": [
                                          {
                                            "expression": {
                                              "id": 9851,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftHandSide": {
                                                "id": 9849,
                                                "name": "finality",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 9759,
                                                "src": "1284:8:29",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              },
                                              "nodeType": "Assignment",
                                              "operator": "=",
                                              "rightHandSide": {
                                                "hexValue": "31",
                                                "id": 9850,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1295:1:29",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "1284:12:29",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              }
                                            },
                                            "id": 9852,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1284:12:29"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 9878,
                                    "nodeType": "IfStatement",
                                    "src": "1206:286:29",
                                    "trueBody": {
                                      "id": 9845,
                                      "nodeType": "Block",
                                      "src": "1223:36:29",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 9843,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 9841,
                                              "name": "finality",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9759,
                                              "src": "1225:8:29",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "hexValue": "31",
                                              "id": 9842,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1236:1:29",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "1225:12:29",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "id": 9844,
                                          "nodeType": "ExpressionStatement",
                                          "src": "1225:12:29"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 9879,
                                  "nodeType": "IfStatement",
                                  "src": "1148:344:29",
                                  "trueBody": {
                                    "id": 9837,
                                    "nodeType": "Block",
                                    "src": "1165:35:29",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 9835,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "id": 9833,
                                            "name": "finality",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9759,
                                            "src": "1167:8:29",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 9834,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1178:1:29",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "1167:12:29",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "id": 9836,
                                        "nodeType": "ExpressionStatement",
                                        "src": "1167:12:29"
                                      }
                                    ]
                                  }
                                },
                                "id": 9880,
                                "nodeType": "IfStatement",
                                "src": "1089:403:29",
                                "trueBody": {
                                  "id": 9829,
                                  "nodeType": "Block",
                                  "src": "1106:36:29",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 9827,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 9825,
                                          "name": "finality",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9759,
                                          "src": "1108:8:29",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "hexValue": "31",
                                          "id": 9826,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1119:1:29",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "1108:12:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "id": 9828,
                                      "nodeType": "ExpressionStatement",
                                      "src": "1108:12:29"
                                    }
                                  ]
                                }
                              },
                              "id": 9881,
                              "nodeType": "IfStatement",
                              "src": "1030:462:29",
                              "trueBody": {
                                "id": 9821,
                                "nodeType": "Block",
                                "src": "1047:36:29",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 9819,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 9817,
                                        "name": "finality",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9759,
                                        "src": "1049:8:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "31",
                                        "id": 9818,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1060:1:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "1049:12:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "id": 9820,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1049:12:29"
                                  }
                                ]
                              }
                            },
                            "id": 9882,
                            "nodeType": "IfStatement",
                            "src": "971:521:29",
                            "trueBody": {
                              "id": 9813,
                              "nodeType": "Block",
                              "src": "988:36:29",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 9811,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 9809,
                                      "name": "finality",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9759,
                                      "src": "990:8:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "hexValue": "31",
                                      "id": 9810,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1001:1:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "990:12:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "id": 9812,
                                  "nodeType": "ExpressionStatement",
                                  "src": "990:12:29"
                                }
                              ]
                            }
                          },
                          "id": 9883,
                          "nodeType": "IfStatement",
                          "src": "913:579:29",
                          "trueBody": {
                            "id": 9805,
                            "nodeType": "Block",
                            "src": "930:35:29",
                            "statements": [
                              {
                                "expression": {
                                  "id": 9803,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 9801,
                                    "name": "finality",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9759,
                                    "src": "932:8:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "31",
                                    "id": 9802,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "943:1:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "932:12:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "id": 9804,
                                "nodeType": "ExpressionStatement",
                                "src": "932:12:29"
                              }
                            ]
                          }
                        },
                        "id": 9884,
                        "nodeType": "IfStatement",
                        "src": "851:641:29",
                        "trueBody": {
                          "id": 9797,
                          "nodeType": "Block",
                          "src": "868:39:29",
                          "statements": [
                            {
                              "expression": {
                                "id": 9795,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 9793,
                                  "name": "finality",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9759,
                                  "src": "870:8:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 9794,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "881:1:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "870:12:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 9796,
                              "nodeType": "ExpressionStatement",
                              "src": "870:12:29"
                            }
                          ]
                        }
                      },
                      "id": 9885,
                      "nodeType": "IfStatement",
                      "src": "791:701:29",
                      "trueBody": {
                        "id": 9789,
                        "nodeType": "Block",
                        "src": "808:37:29",
                        "statements": [
                          {
                            "expression": {
                              "id": 9787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 9785,
                                "name": "finality",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9759,
                                "src": "810:8:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "3135",
                                "id": 9786,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "821:2:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_15_by_1",
                                  "typeString": "int_const 15"
                                },
                                "value": "15"
                              },
                              "src": "810:13:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 9788,
                            "nodeType": "ExpressionStatement",
                            "src": "810:13:29"
                          }
                        ]
                      }
                    },
                    "id": 9886,
                    "nodeType": "IfStatement",
                    "src": "735:757:29",
                    "trueBody": {
                      "id": 9781,
                      "nodeType": "Block",
                      "src": "752:33:29",
                      "statements": [
                        {
                          "expression": {
                            "id": 9779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 9777,
                              "name": "finality",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9759,
                              "src": "754:8:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "3135",
                              "id": 9778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "765:2:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_15_by_1",
                                "typeString": "int_const 15"
                              },
                              "value": "15"
                            },
                            "src": "754:13:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 9780,
                          "nodeType": "ExpressionStatement",
                          "src": "754:13:29"
                        }
                      ]
                    }
                  },
                  "id": 9887,
                  "nodeType": "IfStatement",
                  "src": "667:825:29",
                  "trueBody": {
                    "id": 9773,
                    "nodeType": "Block",
                    "src": "691:38:29",
                    "statements": [
                      {
                        "expression": {
                          "id": 9771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 9769,
                            "name": "finality",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9759,
                            "src": "693:8:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "3135",
                            "id": 9770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "704:2:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_15_by_1",
                              "typeString": "int_const 15"
                            },
                            "value": "15"
                          },
                          "src": "693:13:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 9772,
                        "nodeType": "ExpressionStatement",
                        "src": "693:13:29"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9889,
                        "name": "finality",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9759,
                        "src": "1514:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 9888,
                      "name": "setFinality",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10119,
                      "src": "1502:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 9890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1502:21:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9891,
                  "nodeType": "ExpressionStatement",
                  "src": "1502:21:29"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9756,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9755,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9915,
                  "src": "451:11:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "451:11:29"
              }
            ],
            "name": "initialize",
            "nameLocation": "438:10:29",
            "parameters": {
              "id": 9754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "448:2:29"
            },
            "returnParameters": {
              "id": 9757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "478:0:29"
            },
            "scope": 9916,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 9915,
            "nodeType": "ModifierDefinition",
            "src": "1536:230:29",
            "body": {
              "id": 9914,
              "nodeType": "Block",
              "src": "1559:207:29",
              "statements": [
                {
                  "assignments": [
                    9896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9896,
                      "mutability": "mutable",
                      "name": "impl",
                      "nameLocation": "1577:4:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 9914,
                      "src": "1569:12:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9895,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1569:7:29",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9900,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 9897,
                        "name": "ERC1967Upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35186,
                        "src": "1584:14:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$35186_$",
                          "typeString": "type(contract ERC1967Upgrade)"
                        }
                      },
                      "id": 9898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getImplementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34868,
                      "src": "1584:33:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 9899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1584:35:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1569:50:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1651:20:29",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 9903,
                              "name": "impl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9896,
                              "src": "1666:4:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 9902,
                            "name": "isInitialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9144,
                            "src": "1652:13:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 9904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1652:19:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920696e697469616c697a6564",
                        "id": 9906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1685:21:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6fad3ee6d344e662108f49bced409fae87c3af64246556bdd23a34dddc7e1adc",
                          "typeString": "literal_string \"already initialized\""
                        },
                        "value": "already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6fad3ee6d344e662108f49bced409fae87c3af64246556bdd23a34dddc7e1adc",
                          "typeString": "literal_string \"already initialized\""
                        }
                      ],
                      "id": 9901,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1630:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1630:86:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9908,
                  "nodeType": "ExpressionStatement",
                  "src": "1630:86:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9910,
                        "name": "impl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9896,
                        "src": "1742:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9909,
                      "name": "setInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9935,
                      "src": "1727:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1727:20:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9912,
                  "nodeType": "ExpressionStatement",
                  "src": "1727:20:29"
                },
                {
                  "id": 9913,
                  "nodeType": "PlaceholderStatement",
                  "src": "1758:1:29"
                }
              ]
            },
            "name": "initializer",
            "nameLocation": "1545:11:29",
            "parameters": {
              "id": 9894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1556:2:29"
            },
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9743,
              "name": "NFTBridge",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9111,
              "src": "261:9:29"
            },
            "id": 9744,
            "nodeType": "InheritanceSpecifier",
            "src": "261:9:29"
          }
        ],
        "contractDependencies": [
          10321
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          9916,
          9111,
          9737,
          35186,
          10120,
          9276,
          10242
        ],
        "name": "NFTBridgeImplementation",
        "nameLocation": "234:23:29",
        "scope": 9917,
        "usedErrors": []
      }
    ],
    "license": "Apache 2"
  },
  "id": 29
}