{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060405260405161077e38038061077e83398101604081905261002291610303565b61004d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd61041b565b6000805160206107378339815191521461007757634e487b7160e01b600052600160045260246000fd5b6100838282600061008a565b5050610480565b610093836100c0565b6000825111806100a05750805b156100bb576100b9838361010060201b6100291760201c565b505b505050565b6100c98161012c565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606101258383604051806060016040528060278152602001610757602791396101ec565b9392505050565b61013f816102c160201b6100551760201c565b6101a65760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101cb60008051602061073783398151915260001b6102c760201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060833b61024b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161019d565b600080856001600160a01b03168560405161026691906103cc565b600060405180830381855af49150503d80600081146102a1576040519150601f19603f3d011682016040523d82523d6000602084013e6102a6565b606091505b5090925090506102b78282866102ca565b9695505050505050565b3b151590565b90565b606083156102d9575081610125565b8251156102e95782518084602001fd5b8160405162461bcd60e51b815260040161019d91906103e8565b60008060408385031215610315578182fd5b82516001600160a01b038116811461032b578283fd5b60208401519092506001600160401b0380821115610347578283fd5b818501915085601f83011261035a578283fd5b81518181111561036c5761036c61046a565b604051601f8201601f19908116603f011681019083821181831017156103945761039461046a565b816040528281528860208487010111156103ac578586fd5b6103bd83602083016020880161043e565b80955050505050509250929050565b600082516103de81846020870161043e565b9190910192915050565b602081526000825180602084015261040781604085016020870161043e565b601f01601f19169190910160400192915050565b60008282101561043957634e487b7160e01b81526011600452602481fd5b500390565b60005b83811015610459578181015183820152602001610441565b838111156100b95750506000910152565b634e487b7160e01b600052604160045260246000fd5b6102a88061048f6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b610096565b565b606061004e838360405180606001604052806027815260200161024c602791396100ba565b9392505050565b3b151590565b90565b60006100917f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100b5573d6000f35b3d6000fd5b6060833b61011e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161013991906101cc565b600060405180830381855af49150503d8060008114610174576040519150601f19603f3d011682016040523d82523d6000602084013e610179565b606091505b5091509150610189828286610193565b9695505050505050565b606083156101a257508161004e565b8251156101b25782518084602001fd5b8160405162461bcd60e51b815260040161011591906101e8565b600082516101de81846020870161021b565b9190910192915050565b602081526000825180602084015261020781604085016020870161021b565b601f01601f19169190910160400192915050565b60005b8381101561023657818101518382015260200161021e565b83811115610245576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d7033ff2c1d65812c22046031f68109f45d4dc5a00668f376ba230a295eb84c664736f6c63430008040033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
    "sourceMap": "486:830:56:-:0;;;879:217;;;;;;;;;;;;;;;;;;:::i;:::-;984:54;1037:1;992:41;984:54;:::i;:::-;-1:-1:-1;;;;;;;;;;;952:87:56;945:95;;-1:-1:-1;;;945:95:56;;;;;;;;;1050:39;1068:6;1076:5;1083;1050:17;:39::i;:::-;879:217;;486:830;;2054:295:57;2192:29;2203:17;2192:10;:29::i;:::-;2249:1;2235:4;:11;:15;:28;;;;2254:9;2235:28;2231:112;;;2279:53;2308:17;2327:4;2279:28;;;;;:53;;:::i;:::-;;2231:112;2054:295;;;:::o;1768:152::-;1834:37;1853:17;1834:18;:37::i;:::-;1886:27;;-1:-1:-1;;;;;1886:27:57;;;;;;;;1768:152;:::o;6170:198:69:-;6253:12;6284:77;6305:6;6313:4;6284:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6277:84;6170:198;-1:-1:-1;;;6170:198:69:o;1403:259:57:-;1484:37;1503:17;1484:18;;;;;:37;;:::i;:::-;1476:95;;;;-1:-1:-1;;;1476:95:57;;1988:2:75;1476:95:57;;;1970:21:75;2027:2;2007:18;;;2000:30;2066:34;2046:18;;;2039:62;-1:-1:-1;;;2117:18:75;;;2110:43;2170:19;;1476:95:57;;;;;;;;;1638:17;1581:48;-1:-1:-1;;;;;;;;;;;1608:20:57;;1581:26;;;;;:48;;:::i;:::-;:74;;-1:-1:-1;;;;;;1581:74:57;-1:-1:-1;;;;;1581:74:57;;;;;;;;;;-1:-1:-1;1403:259:57:o;6554:387:69:-;6695:12;1034:20;;6719:69;;;;-1:-1:-1;;;6719:69:69;;2402:2:75;6719:69:69;;;2384:21:75;2441:2;2421:18;;;2414:30;2480:34;2460:18;;;2453:62;-1:-1:-1;;;2531:18:75;;;2524:36;2577:19;;6719:69:69;2374:228:75;6719:69:69;6800:12;6814:23;6841:6;-1:-1:-1;;;;;6841:19:69;6861:4;6841:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6799:67:69;;-1:-1:-1;6799:67:69;-1:-1:-1;6883:51:69;6799:67;;6921:12;6883:16;:51::i;:::-;6876:58;6554:387;-1:-1:-1;;;;;;6554:387:69:o;718:377::-;1034:20;1080:8;;;718:377::o;1542:147:71:-;1669:4;1645:38::o;7161:692:69:-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:69;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7619:145;7809:12;7802:20;;-1:-1:-1;;;7802:20:69;;;;;;;;:::i;14:1100:75:-;102:6;110;163:2;151:9;142:7;138:23;134:32;131:2;;;184:6;176;169:22;131:2;215:16;;-1:-1:-1;;;;;260:31:75;;250:42;;240:2;;311:6;303;296:22;240:2;388;373:18;;367:25;339:5;;-1:-1:-1;;;;;;441:14:75;;;438:2;;;473:6;465;458:22;438:2;516:6;505:9;501:22;491:32;;561:7;554:4;550:2;546:13;542:27;532:2;;588:6;580;573:22;532:2;622;616:9;644:2;640;637:10;634:2;;;650:18;;:::i;:::-;725:2;719:9;693:2;779:13;;-1:-1:-1;;775:22:75;;;799:2;771:31;767:40;755:53;;;823:18;;;843:22;;;820:46;817:2;;;869:18;;:::i;:::-;909:10;905:2;898:22;944:2;936:6;929:18;984:7;979:2;974;970;966:11;962:20;959:33;956:2;;;1010:6;1002;995:22;956:2;1028:55;1080:2;1075;1067:6;1063:15;1058:2;1054;1050:11;1028:55;:::i;:::-;1102:6;1092:16;;;;;;;121:993;;;;;:::o;1119:274::-;1248:3;1286:6;1280:13;1302:53;1348:6;1343:3;1336:4;1328:6;1324:17;1302:53;:::i;:::-;1371:16;;;;;1256:137;-1:-1:-1;;1256:137:75:o;1398:383::-;1547:2;1536:9;1529:21;1510:4;1579:6;1573:13;1622:6;1617:2;1606:9;1602:18;1595:34;1638:66;1697:6;1692:2;1681:9;1677:18;1672:2;1664:6;1660:15;1638:66;:::i;:::-;1765:2;1744:15;-1:-1:-1;;1740:29:75;1725:45;;;;1772:2;1721:54;;1519:262;-1:-1:-1;;1519:262:75:o;2607:228::-;2647:4;2675:1;2672;2669:8;2666:2;;;-1:-1:-1;;;2700:34:75;;2757:4;2754:1;2747:15;2788:4;2707;2775:18;2666:2;-1:-1:-1;2820:9:75;;2656:179::o;2840:258::-;2912:1;2922:113;2936:6;2933:1;2930:13;2922:113;;;3012:11;;;3006:18;2993:11;;;2986:39;2958:2;2951:10;2922:113;;;3053:6;3050:1;3047:13;3044:2;;;-1:-1:-1;;3088:1:75;3070:16;;3063:27;2893:205::o;3103:127::-;3164:10;3159:3;3155:20;3152:1;3145:31;3195:4;3192:1;3185:15;3219:4;3216:1;3209:15;3135:95;486:830:56;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523661001357610011610017565b005b6100115b61002761002261005e565b610096565b565b606061004e838360405180606001604052806027815260200161024c602791396100ba565b9392505050565b3b151590565b90565b60006100917f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100b5573d6000f35b3d6000fd5b6060833b61011e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161013991906101cc565b600060405180830381855af49150503d8060008114610174576040519150601f19603f3d011682016040523d82523d6000602084013e610179565b606091505b5091509150610189828286610193565b9695505050505050565b606083156101a257508161004e565b8251156101b25782518084602001fd5b8160405162461bcd60e51b815260040161011591906101e8565b600082516101de81846020870161021b565b9190910192915050565b602081526000825180602084015261020781604085016020870161021b565b601f01601f19169190910160400192915050565b60005b8381101561023657818101518382015260200161021e565b83811115610245576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d7033ff2c1d65812c22046031f68109f45d4dc5a00668f376ba230a295eb84c664736f6c63430008040033",
    "sourceMap": "486:830:56:-:0;;;;;;2833:11:58;:9;:11::i;:::-;486:830:56;;2610:11:58;2257:110;2332:28;2342:17;:15;:17::i;:::-;2332:9;:28::i;:::-;2257:110::o;6170:198:69:-;6253:12;6284:77;6305:6;6313:4;6284:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6277:84;6170:198;-1:-1:-1;;;6170:198:69:o;718:377::-;1034:20;1080:8;;;718:377::o;1542:147:71:-;1669:4;1645:38::o;1174:140:56:-;1241:12;1272:35;901:66:57;1251:54;-1:-1:-1;;;;;1251:54:57;;1172:140;1272:35:56;1265:42;;1174:140;:::o;883:895:58:-;1221:14;1218:1;1215;1202:34;1435:1;1432;1416:14;1413:1;1397:14;1390:5;1377:60;1511:16;1508:1;1505;1490:38;1549:6;1616:66;;;;1731:16;1728:1;1721:27;1616:66;1651:16;1648:1;1641:27;6554:387:69;6695:12;1034:20;;6719:69;;;;-1:-1:-1;;;6719:69:69;;883:2:75;6719:69:69;;;865:21:75;922:2;902:18;;;895:30;961:34;941:18;;;934:62;-1:-1:-1;;;1012:18:75;;;1005:36;1058:19;;6719:69:69;;;;;;;;;6800:12;6814:23;6841:6;-1:-1:-1;;;;;6841:19:69;6861:4;6841:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6799:67;;;;6883:51;6900:7;6909:10;6921:12;6883:16;:51::i;:::-;6876:58;6554:387;-1:-1:-1;;;;;;6554:387:69:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:69;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7619:145;7809:12;7802:20;;-1:-1:-1;;;7802:20:69;;;;;;;;:::i;14:274:75:-;143:3;181:6;175:13;197:53;243:6;238:3;231:4;223:6;219:17;197:53;:::i;:::-;266:16;;;;;151:137;-1:-1:-1;;151:137:75:o;293:383::-;442:2;431:9;424:21;405:4;474:6;468:13;517:6;512:2;501:9;497:18;490:34;533:66;592:6;587:2;576:9;572:18;567:2;559:6;555:15;533:66;:::i;:::-;660:2;639:15;-1:-1:-1;;635:29:75;620:45;;;;667:2;616:54;;414:262;-1:-1:-1;;414:262:75:o;1088:258::-;1160:1;1170:113;1184:6;1181:1;1178:13;1170:113;;;1260:11;;;1254:18;1241:11;;;1234:39;1206:2;1199:10;1170:113;;;1301:6;1298:1;1295:13;1292:2;;;1336:1;1327:6;1322:3;1318:16;1311:27;1292:2;;1141:205;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "ast": {
    "absolutePath": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
    "id": 34993,
    "exportedSymbols": {
      "Address": [
        36856
      ],
      "ERC1967Proxy": [
        34992
      ],
      "ERC1967Upgrade": [
        35341
      ],
      "IBeacon": [
        35485
      ],
      "Proxy": [
        35393
      ],
      "StorageSlot": [
        36938
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1284:56",
    "nodes": [
      {
        "id": 34941,
        "nodeType": "PragmaDirective",
        "src": "33:23:56",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 34942,
        "nodeType": "ImportDirective",
        "src": "58:22:56",
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "file": "../Proxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34993,
        "sourceUnit": 35394,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34943,
        "nodeType": "ImportDirective",
        "src": "81:30:56",
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "file": "./ERC1967Upgrade.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34993,
        "sourceUnit": 35342,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34992,
        "nodeType": "ContractDefinition",
        "src": "486:830:56",
        "nodes": [
          {
            "id": 34979,
            "nodeType": "FunctionDefinition",
            "src": "879:217:56",
            "body": {
              "id": 34978,
              "nodeType": "Block",
              "src": "935:161:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 34969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 34957,
                          "name": "_IMPLEMENTATION_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35005,
                          "src": "952:20:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 34967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
                                        "id": 34963,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1002:30:56",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
                                          "typeString": "literal_string \"eip1967.proxy.implementation\""
                                        },
                                        "value": "eip1967.proxy.implementation"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
                                          "typeString": "literal_string \"eip1967.proxy.implementation\""
                                        }
                                      ],
                                      "id": 34962,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "992:9:56",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 34964,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "992:41:56",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 34961,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "984:7:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 34960,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "984:7:56",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 34965,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "984:50:56",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 34966,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1037:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "984:54:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 34959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "976:7:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 34958,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "976:7:56",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "976:63:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "952:87:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 34956,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "945:6:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 34970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "945:95:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34971,
                  "nodeType": "ExpressionStatement",
                  "src": "945:95:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34973,
                        "name": "_logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34951,
                        "src": "1068:6:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34974,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34953,
                        "src": "1076:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 34975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1083:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 34972,
                      "name": "_upgradeToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35092,
                      "src": "1050:17:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 34976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1050:39:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34977,
                  "nodeType": "ExpressionStatement",
                  "src": "1050:39:56"
                }
              ]
            },
            "documentation": {
              "id": 34949,
              "nodeType": "StructuredDocumentation",
              "src": "539:335:56",
              "text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializating the storage of the proxy like a Solidity constructor."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 34954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34951,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nameLocation": "899:6:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 34979,
                  "src": "891:14:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34950,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34953,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "920:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 34979,
                  "src": "907:18:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 34952,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "907:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "890:36:56"
            },
            "returnParameters": {
              "id": 34955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "935:0:56"
            },
            "scope": 34992,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34991,
            "nodeType": "FunctionDefinition",
            "src": "1174:140:56",
            "body": {
              "id": 34990,
              "nodeType": "Block",
              "src": "1255:59:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34986,
                        "name": "ERC1967Upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35341,
                        "src": "1272:14:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$35341_$",
                          "typeString": "type(contract ERC1967Upgrade)"
                        }
                      },
                      "id": 34987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getImplementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35023,
                      "src": "1272:33:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 34988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1272:35:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 34985,
                  "id": 34989,
                  "nodeType": "Return",
                  "src": "1265:42:56"
                }
              ]
            },
            "baseFunctions": [
              35358
            ],
            "documentation": {
              "id": 34980,
              "nodeType": "StructuredDocumentation",
              "src": "1102:67:56",
              "text": " @dev Returns the current implementation address."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nameLocation": "1183:15:56",
            "overrides": {
              "id": 34982,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1223:8:56"
            },
            "parameters": {
              "id": 34981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1198:2:56"
            },
            "returnParameters": {
              "id": 34985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34984,
                  "mutability": "mutable",
                  "name": "impl",
                  "nameLocation": "1249:4:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 34991,
                  "src": "1241:12:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1241:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1240:14:56"
            },
            "scope": 34992,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34945,
              "name": "Proxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35393,
              "src": "511:5:56"
            },
            "id": 34946,
            "nodeType": "InheritanceSpecifier",
            "src": "511:5:56"
          },
          {
            "baseName": {
              "id": 34947,
              "name": "ERC1967Upgrade",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35341,
              "src": "518:14:56"
            },
            "id": 34948,
            "nodeType": "InheritanceSpecifier",
            "src": "518:14:56"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 34944,
          "nodeType": "StructuredDocumentation",
          "src": "113:372:56",
          "text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34992,
          35341,
          35393
        ],
        "name": "ERC1967Proxy",
        "nameLocation": "495:12:56",
        "scope": 34993,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 56
}